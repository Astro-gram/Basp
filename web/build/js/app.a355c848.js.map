{"version":3,"file":"js/app.a355c848.js","mappings":"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","sources":["webpack://basp/../src/builtInFunctions/array.js","webpack://basp/../src/builtInFunctions/conversions.js","webpack://basp/../src/builtInFunctions/math.js","webpack://basp/../src/builtInFunctions/misc.js","webpack://basp/../src/builtInFunctions/string.js","webpack://basp/../src/builtInFunctions/types.js","webpack://basp/../src/builtInFunctions/wrapper.js","webpack://basp/../src/constants.js","webpack://basp/../src/error.js","webpack://basp/../src/interpreter/INodes.js","webpack://basp/../src/interpreter/compare.js","webpack://basp/../src/interpreter/interpreter.js","webpack://basp/../src/interpreter/interpreterSetup.js","webpack://basp/../src/lexer.js","webpack://basp/../src/parser/nodes.js","webpack://basp/../src/parser/parser.js","webpack://basp/../src/utils.js","webpack://basp/./src/App.vue","webpack://basp/./src/components/Header.vue","webpack://basp/src/components/Header.vue","webpack://basp/./src/components/Header.vue?2279","webpack://basp/./src/components/Header.vue?03e2","webpack://basp/./src/components/Hero.vue","webpack://basp/src/components/Hero.vue","webpack://basp/./src/components/Hero.vue?d021","webpack://basp/./src/components/Hero.vue?bc9a","webpack://basp/./src/components/Editor.vue","webpack://basp/src/components/Editor.vue","webpack://basp/./src/components/Editor.vue?571e","webpack://basp/./src/components/Editor.vue?87e1","webpack://basp/src/App.vue","webpack://basp/./src/App.vue?51dd","webpack://basp/./src/App.vue?0e40","webpack://basp/./src/main.js","webpack://basp/webpack/bootstrap","webpack://basp/webpack/runtime/chunk loaded","webpack://basp/webpack/runtime/compat get default export","webpack://basp/webpack/runtime/define property getters","webpack://basp/webpack/runtime/global","webpack://basp/webpack/runtime/hasOwnProperty shorthand","webpack://basp/webpack/runtime/jsonp chunk loading","webpack://basp/webpack/startup"],"sourcesContent":["const { dataTypes } = require(\"../constants.js\");\r\n\r\n//Had to import INodes as an argument because if I used require(), it would be an empty object\r\n\r\nfunction push(INodes) {\r\n    return new INodes.IBuiltInFunctionNode(\r\n        dataTypes.Null,\r\n        \"push\",\r\n        [\r\n            { type: dataTypes.Any, name: \"newElement\" }\r\n        ],\r\n        (args) => {\r\n            const v = INodes.IBuiltInFunctionNode.getArg(\"value\", args);\r\n            const n = INodes.IBuiltInFunctionNode.getArg(\"newElement\", args);\r\n\r\n            const nClone = Object.assign(Object.create(Object.getPrototypeOf(n)), n);\r\n\r\n            v.elements.push(nClone);\r\n            v.value = v.getValue(v.elements);\r\n        }\r\n    );\r\n}\r\n\r\nfunction pop(INodes) {\r\n    return new INodes.IBuiltInFunctionNode(\r\n        dataTypes.Null,\r\n        \"pop\",\r\n        [],\r\n        (args) => {\r\n            const v = INodes.IBuiltInFunctionNode.getArg(\"value\", args);\r\n            \r\n            v.elements.pop();\r\n            v.value = v.getValue(v.elements);\r\n        }\r\n    );\r\n}\r\n\r\nmodule.exports = {\r\n    push,\r\n    pop\r\n};","const { IBuiltInFunctionNode, INumberNode, IStringNode } = require(\"../interpreter/INodes.js\");\r\nconst { dataTypes } = require(\"../constants.js\");\r\n\r\nfunction NumberType() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Number, //Return Type\r\n        \"Number\", //Function Name\r\n        [\r\n            //Arguments\r\n            { type: dataTypes.String, name: \"s\" } \r\n        ],\r\n        (args, context) => { \r\n            //Function\r\n            const strNumber = IBuiltInFunctionNode.getArg(\"s\", args);\r\n            return new INumberNode(Number(strNumber.stripQuotes(strNumber.value)), dataTypes.Number, strNumber.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction StringType() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.String,\r\n        \"String\",\r\n        [\r\n            { type: dataTypes.Any, name: \"v\" } \r\n        ],\r\n        (args, context) => { \r\n            const number = IBuiltInFunctionNode.getArg(\"v\", args);\r\n            return new IStringNode(`\"${number.value}\"`, dataTypes.String, number.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nmodule.exports = {\r\n    StringType,\r\n    NumberType\r\n};","const { dataTypes } = require(\"../constants.js\");\r\nconst { IBuiltInFunctionNode, INumberNode, IStringNode, IStructNode } = require(\"../interpreter/INodes.js\");\r\n\r\nfunction Floor() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Number,\r\n        \"Floor\",\r\n        [\r\n            { type: dataTypes.Any, name: \"v\" }\r\n        ],\r\n        (args, context) => {\r\n            const v = IBuiltInFunctionNode.getArg(\"v\", args);\r\n            return new INumberNode(Math.floor(v.value), dataTypes.Number, v.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction Ceil() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Number,\r\n        \"Ceil\",\r\n        [\r\n            { type: dataTypes.Any, name: \"v\" }\r\n        ],\r\n        (args, context) => {\r\n            const v = IBuiltInFunctionNode.getArg(\"v\", args);\r\n            return new INumberNode(Math.ceil(v.value), dataTypes.Number, v.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction Round() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Number,\r\n        \"Round\",\r\n        [\r\n            { type: dataTypes.Any, name: \"v\" }\r\n        ],\r\n        (args, context) => {\r\n            const v = IBuiltInFunctionNode.getArg(\"v\", args);\r\n            return new INumberNode(Math.round(v.value), dataTypes.Number, v.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction Abs() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Number,\r\n        \"Abs\",\r\n        [\r\n            { type: dataTypes.Any, name: \"v\" }\r\n        ],\r\n        (args, context) => {\r\n            const v = IBuiltInFunctionNode.getArg(\"v\", args);\r\n            return new INumberNode(Math.abs(v.value), dataTypes.Number, v.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction Sqrt() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Number,\r\n        \"Sqrt\",\r\n        [\r\n            { type: dataTypes.Any, name: \"v\" }\r\n        ],\r\n        (args, context) => {\r\n            const v = IBuiltInFunctionNode.getArg(\"v\", args);\r\n            return new INumberNode(Math.sqrt(v.value), dataTypes.Number, v.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction Random() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Number,\r\n        \"Random\",\r\n        [],\r\n        (args, context) => {\r\n            return new INumberNode(Math.random(), dataTypes.Number, null, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction getMath() {\r\n    const methods = [\r\n        { name: \"Floor\", value: Floor(), writable: false },\r\n        { name: \"Ceil\", value: Ceil(), writable: false },\r\n        { name: \"Round\", value: Round(), writable: false },\r\n        { name: \"Abs\", value: Abs(), writable: false },\r\n        { name: \"Sqrt\", value: Sqrt(), writable: false },\r\n        { name: \"Random\", value: Random(), writable: false },\r\n    ];\r\n\r\n    const properties = [\r\n        { name: \"PI\", value: new INumberNode(Math.PI, dataTypes.Number), writable: false },\r\n    ];\r\n\r\n    return new IStructNode(\"Math\", methods.concat(properties), dataTypes.Struct);\r\n}\r\n\r\nmodule.exports = {\r\n    getMath\r\n};","const { IBuiltInFunctionNode, INumberNode, IStringNode } = require(\"../interpreter/INodes.js\");\r\nconst { dataTypes } = require(\"../constants.js\");\r\n\r\nfunction Print() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Null,\r\n        \"Print\",\r\n        [\r\n            { type: dataTypes.Any, name: \"i\" }\r\n        ],\r\n        (args, context) => {\r\n            const valueToPrint = IBuiltInFunctionNode.getArg(\"i\", args);\r\n            context.global.apiCaller.call(valueToPrint.value, \"print\");\r\n        }\r\n    );\r\n}\r\n\r\nfunction Clear() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Null,\r\n        \"Clear\",\r\n        [],\r\n        (args, context) => {\r\n            context.global.apiCaller.call(null, \"clear\");\r\n        }\r\n    );\r\n}\r\n\r\nmodule.exports = {\r\n    Print,\r\n    Clear\r\n};","const { dataTypes } = require(\"../constants.js\");\r\n\r\n//Had to import INodes as an argument because if I used require(), it would be an empty object\r\nfunction toUpperCase(INodes) {\r\n    return new INodes.IBuiltInFunctionNode(\r\n        dataTypes.String,\r\n        \"toUpperCase\",\r\n        [],\r\n        (args, context) => {\r\n            const v = INodes.IBuiltInFunctionNode.getArg(\"value\", args);\r\n            return new INodes.IStringNode(v.value.toUpperCase(), dataTypes.String, v.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction toLowerCase(INodes) {\r\n    return new INodes.IBuiltInFunctionNode(\r\n        dataTypes.String,\r\n        \"toLowerCase\",\r\n        [],\r\n        (args, context) => {\r\n            const v = INodes.IBuiltInFunctionNode.getArg(\"value\", args);\r\n            return new INodes.IStringNode(v.value.toLowerCase(), dataTypes.String, v.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction split(INodes) {\r\n    return new INodes.IBuiltInFunctionNode(\r\n        dataTypes.Array,\r\n        \"split\",\r\n        [\r\n            { type: dataTypes.String, name: \"delimiter\" }\r\n        ],\r\n        (args, context) => {\r\n            const v = INodes.IBuiltInFunctionNode.getArg(\"value\", args);\r\n            const d = INodes.IBuiltInFunctionNode.getArg(\"delimiter\", args);\r\n\r\n            return new INodes.IArrayNode(\r\n                v.stripQuotes(v.value)\r\n                    .split(d.stripQuotes(d.value))\r\n                    .map(c => new INodes.IStringNode(`\"${c}\"`, dataTypes.String, v.position, context)),\r\n                dataTypes.Array,\r\n                v.position,\r\n                context\r\n            );\r\n        }\r\n    );\r\n}\r\n\r\nmodule.exports = {\r\n    toUpperCase,\r\n    toLowerCase,\r\n    split\r\n}","const { IBuiltInFunctionNode, IBooleanNode, IStringNode } = require(\"../interpreter/INodes.js\");\r\nconst { dataTypes } = require(\"../constants.js\");\r\n\r\nfunction IsArray() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Bool,\r\n        \"IsArray\",\r\n        [\r\n            { type: dataTypes.Any, name: \"a\" }\r\n        ],\r\n        (args, context) => {\r\n            const arg = IBuiltInFunctionNode.getArg(\"a\", args);\r\n            return new IBooleanNode(arg.type === dataTypes.Array ? \"True\" : \"False\", dataTypes.Bool, arg.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction IsNumber() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Bool,\r\n        \"IsNumber\",\r\n        [\r\n            { type: dataTypes.Any, name: \"n\" }\r\n        ],\r\n        (args, context) => {\r\n            const arg = IBuiltInFunctionNode.getArg(\"n\", args);\r\n            return new IBooleanNode(arg.type === dataTypes.Number ? \"True\" : \"False\", dataTypes.Bool, arg.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction IsString() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Bool,\r\n        \"IsString\",\r\n        [\r\n            { type: dataTypes.Any, name: \"s\" }\r\n        ],\r\n        (args, context) => {\r\n            const arg = IBuiltInFunctionNode.getArg(\"s\", args);\r\n            return new IBooleanNode(arg.type === dataTypes.String ? \"True\" : \"False\", dataTypes.Bool, arg.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction IsEnum() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Bool,\r\n        \"IsEnum\",\r\n        [\r\n            { type: dataTypes.Any, name: \"e\" }\r\n        ],\r\n        (args, context) => {\r\n            const arg = IBuiltInFunctionNode.getArg(\"e\", args);\r\n            return new IBooleanNode(arg.type === dataTypes.Enum ? \"True\" : \"False\", dataTypes.Bool, arg.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction IsBoolean() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Bool,\r\n        \"IsBoolean\",\r\n        [\r\n            { type: dataTypes.Any, name: \"b\" }\r\n        ],\r\n        (args, context) => {\r\n            const arg = IBuiltInFunctionNode.getArg(\"b\", args);\r\n            return new IBooleanNode(arg.type === dataTypes.Bool ? \"True\" : \"False\", dataTypes.Bool, arg.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction IsFunction() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.Bool,\r\n        \"IsFunction\",\r\n        [\r\n            { type: dataTypes.Any, name: \"f\" }\r\n        ],\r\n        (args, context) => {\r\n            const arg = IBuiltInFunctionNode.getArg(\"f\", args);\r\n            return new IBooleanNode(arg.type === dataTypes.Function ? \"True\" : \"False\", dataTypes.Bool, arg.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nfunction Typeof() {\r\n    return new IBuiltInFunctionNode(\r\n        dataTypes.String,\r\n        \"Typeof\",\r\n        [\r\n            { type: dataTypes.Any, name: \"i\" }\r\n        ],\r\n        (args, context) => {\r\n            const arg = IBuiltInFunctionNode.getArg(\"i\", args);\r\n            return new IStringNode(`\"${arg.type}\"`, dataTypes.String, arg.position, context);\r\n        }\r\n    );\r\n}\r\n\r\nmodule.exports = {\r\n    IsArray,\r\n    IsNumber,\r\n    IsString,\r\n    IsEnum,\r\n    IsBoolean,\r\n    IsFunction,\r\n\r\n    Typeof\r\n};","const { NumberType, StringType } = require(\"./conversions.js\");\r\nconst { Print, Clear } = require(\"./misc.js\");\r\nconst { IsArray, IsNumber, IsString, IsEnum, IsBoolean, IsFunction, Typeof } = require(\"./types.js\");\r\nconst { getMath } = require(\"./math.js\");\r\n\r\nmodule.exports = {\r\n    NumberType,\r\n    StringType,\r\n\r\n    Print,\r\n    Clear,\r\n\r\n    IsArray,\r\n    IsNumber,\r\n    IsString,\r\n    IsEnum,\r\n    IsBoolean,\r\n    IsFunction,\r\n    \r\n    Typeof,\r\n\r\n    getMath,\r\n};","const tokenTypes = {\r\n    NEWLINE: \"NEWLINE\",\r\n    COMMENT: \"COMMENT\",\r\n    NUMBER: \"NUMBER\",\r\n    STRING: \"STRING\",\r\n    BOOL: \"BOOL\",\r\n\r\n    ADD_EQ: \"ADD_EQ\",\r\n    ADD: \"ADD\",\r\n\r\n    SUB_EQ: \"SUB_EQ\",\r\n    SUB: \"SUB\",\r\n\r\n    MUL_EQ: \"MUL_EQ\",\r\n    MUL: \"MUL\",\r\n\r\n    DIV_EQ: \"DIV_EQ\",\r\n    DIV: \"DIV\",\r\n\r\n    POW_EQ: \"POW_EQ\",\r\n    POW: \"POW\",\r\n\r\n    MOD_EQ: \"MOD_EQ\",\r\n    MOD: \"MOD\",\r\n\r\n    LSQUARE: \"LSQUARE\",\r\n    RSQUARE: \"RSQUARE\",\r\n\r\n    LBRACKET: \"LBRACKET\",\r\n    RBRACKET: \"RBRACKET\",\r\n\r\n    EQ: \"EQ\",\r\n    NEQ: \"NEQ\",\r\n\r\n    NOT: \"NOT\",\r\n    AND: \"AND\",\r\n    OR: \"OR\",\r\n\r\n    GTE: \"GTE\",\r\n    LTE: \"LTE\",\r\n    GT: \"GT\",\r\n    LT: \"LT\",\r\n\r\n    LPAR: \"LPAR\",\r\n    RPAR: \"RPAR\",\r\n\r\n    DOT: \"DOT\",\r\n    COMMA: \"COMMA\",\r\n    COLON: \"COLON\",\r\n\r\n    ASSIGN: \"ASSIGN\",\r\n\r\n    TYPE: \"TYPE\",\r\n\r\n    KEYWORD: \"KEYWORD\",\r\n    IDENTIFIER: \"IDENTIFIER\",\r\n    EOF: \"EOF\",\r\n}\r\n\r\nconst lexerRules = [\r\n    [tokenTypes.NEWLINE, /\\n/],\r\n    [tokenTypes.COMMENT, /\\/\\//],\r\n    [tokenTypes.NUMBER, /^\\d*$/],\r\n    [tokenTypes.STRING, /([\"'])(?:(?=(\\\\?))\\2.)*?\\1/],\r\n    [tokenTypes.BOOL, /^True$|^False$/],\r\n\r\n    [tokenTypes.ADD_EQ, /^\\+=$/],\r\n    [tokenTypes.ADD, /^\\+$/],\r\n\r\n    [tokenTypes.SUB_EQ, /^\\-=$/],\r\n    [tokenTypes.SUB, /^\\-$/],\r\n\r\n    [tokenTypes.MUL_EQ, /^\\*=$/],\r\n    [tokenTypes.MUL, /^\\*$/],\r\n\r\n    [tokenTypes.DIV_EQ, /^\\/=$/],\r\n    [tokenTypes.DIV, /^\\/$/],\r\n\r\n    [tokenTypes.POW_EQ, /^\\^=$/],\r\n    [tokenTypes.POW, /^\\^$/],\r\n\r\n    [tokenTypes.MOD_EQ, /^\\%=$/],\r\n    [tokenTypes.MOD, /^\\%$/],\r\n\r\n    [tokenTypes.LSQUARE, /^\\[$/],\r\n    [tokenTypes.RSQUARE, /^\\]$/],\r\n\r\n    [tokenTypes.LBRACKET, /^\\{$/],\r\n    [tokenTypes.RBRACKET, /^\\}$/],\r\n\r\n    [tokenTypes.EQ, /^==$/],\r\n    [tokenTypes.NEQ, /^!=$/],\r\n\r\n    [tokenTypes.NOT, /^!$/],\r\n    [tokenTypes.AND, /^&$/],\r\n    [tokenTypes.OR, /^~$/],\r\n\r\n    [tokenTypes.GTE, /^>=$/],\r\n    [tokenTypes.LTE, /^<=$/],\r\n    [tokenTypes.GT, /^>$/],\r\n    [tokenTypes.LT, /^<$/],\r\n\r\n    [tokenTypes.LPAR, /^\\($/],\r\n    [tokenTypes.RPAR, /^\\)$/],\r\n\r\n    [tokenTypes.DOT, /^\\.$/],\r\n    [tokenTypes.COMMA, /^,$/],\r\n    [tokenTypes.COLON, /^:$/],\r\n\r\n    [tokenTypes.ASSIGN, /^\\=$/],\r\n\r\n    [tokenTypes.TYPE, /^string$|^int$|^bool$|^array$|^enum$|^struct$/],\r\n\r\n    [tokenTypes.KEYWORD, /^return$|^break$|^continue$|^fn$|^if$|^else$|^elif$|^for$|^in$|^while$|^new$/],\r\n    [tokenTypes.IDENTIFIER, /[\\s\\S]*/],\r\n];\r\n\r\nconst dataTypes = {\r\n    Number: \"NUMBER\",\r\n    String: \"STRING\",\r\n    Bool: \"BOOL\",\r\n    Array: \"ARRAY\",\r\n    Enum: \"ENUM\",\r\n    EnumValue: \"ENUM_VALUE\",\r\n    Struct: \"STRUCT\",\r\n    Function: \"FUNCTION\",\r\n    Null: \"NULL\",\r\n    Any: \"ANY\"\r\n};\r\n\r\nconst assignmentOperators = [\r\n    \"add_eq\",\r\n    \"sub_eq\",\r\n    \"mul_eq\",\r\n    \"div_eq\",\r\n    \"mod_eq\",\r\n    \"assign\"\r\n];\r\n\r\nmodule.exports = {\r\n    lexerRules,\r\n    dataTypes,\r\n    assignmentOperators,\r\n    tokenTypes\r\n};","class Error {\r\n    static InvalidSyntaxError = \"Invalid Syntax\";\r\n    static TypeError = \"Type\";\r\n    static UnknownError = \"Unknown\";\r\n    static RuntimeError = \"Runtime\";\r\n    static IndexOutOfBoundsError = \"Index Out Of Bounds\";\r\n    static InternalError = \"Internal\";\r\n\r\n    constructor(position, error, details, context = null) {\r\n        this.position = position;\r\n        this.context = context;\r\n        this.error = error;\r\n        this.details = details;\r\n\r\n    }\r\n\r\n    toString() {\r\n        const lineOne = `${this.error} Error: ${this.details}`;\r\n\r\n        let lineTwo = this.position === undefined ? \"<unknown>\" : this.position.toString();\r\n        const result = this.getStack(lineTwo);\r\n\r\n        const walls = \"=\".repeat(Math.max(lineOne.length, lineTwo.length, result.longestLine));\r\n\r\n        return `\r\n${walls}\r\n${lineOne}\r\n    at ${result.stack}\r\n${walls}\r\n        `;\r\n    }\r\n\r\n\r\n    getStack(current) {\r\n        let result = {\r\n            longestLine: 0,\r\n            stack: current,\r\n        };\r\n\r\n        if (this.context === null) return result;\r\n\r\n        let contextClone = this.context.clone();\r\n\r\n        result.stack += \"\\n\\tin \" + this.context.displayName;\r\n\r\n        while (contextClone.parent !== null) {\r\n            result.stack += \"\\n\\tin \" + contextClone.parent.displayName;\r\n            contextClone = contextClone.parent;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    Error\r\n};","const { dataTypes } = require(\"../constants.js\");\r\nconst { Error } = require(\"../error.js\");\r\n\r\nconst { toUpperCase, toLowerCase, split } = require(\"../builtInFunctions/string.js\");\r\nconst { push, pop } = require(\"../builtInFunctions/array.js\");\r\n\r\nclass INode {\r\n    static INumberNode = \"INumberNode\";\r\n    static IStringNode = \"IStringNode\";\r\n    static IBooleanNode = \"IBooleanNode\";\r\n    static IArrayNode = \"IArrayNode\";\r\n    static IEnumNode = \"IEnumNode\";\r\n    static IEnumValueNode = \"IEnumValueNode\";\r\n    static IStructNode = \"IStructNode\";\r\n    static IBaseStructNode = \"IBaseStructNode\";\r\n    static IFunctionNode = \"IFunctionNode\";\r\n    static IBuiltInFunctionNode = \"IBuiltInFunctionNode\";\r\n    static IMultiResultNode = \"IMultiResultNode\";\r\n    static IForceControlNode = \"IForceControlNode\";\r\n    static IReturnNode = \"IReturnNode\";\r\n\r\n    constructor(value, type, nodeType, position = null, context = null, properties = {}, methods = {}) {\r\n        this.value = value;\r\n        this.type = type;\r\n        this.nodeType = nodeType;\r\n\r\n        this.position = position;\r\n        this.context = context;\r\n        this.properties = properties;\r\n        this.methods = methods;\r\n        this.parent = null;\r\n    }\r\n\r\n    toString() {\r\n        return `<INode ${this.nodeType}>`;\r\n    }\r\n}\r\n\r\nclass INumberNode extends INode {\r\n    constructor(value, type, position = null, context = null) {\r\n        super(Number(value), type, INode.INumberNode, position, context);\r\n    }\r\n\r\n    add(other) {\r\n        if (other instanceof INumberNode) {\r\n            return new INumberNode(this.value + other.value, this.type, this.position, this.context);\r\n        }\r\n    }\r\n\r\n    sub(other) {\r\n        if (other instanceof INumberNode) {\r\n            return new INumberNode(this.value - other.value, this.type, this.position, this.context);\r\n        }\r\n    }\r\n\r\n    mul(other) {\r\n        if (other instanceof INumberNode) {\r\n            return new INumberNode(this.value * other.value, this.type, this.position, this.context);\r\n        }\r\n    }\r\n\r\n    div(other) {\r\n        if (other instanceof INumberNode) {\r\n            if (other.value === 0) {\r\n                return new Error(other.position, Error.RuntimeError, \"Can't divide by 0\", this.context);\r\n            }\r\n\r\n            return new INumberNode(this.value / other.value, this.type, this.position, this.context);\r\n        }\r\n    }\r\n\r\n    pow(other) {\r\n        if (other instanceof INumberNode) {\r\n            return new INumberNode(this.value ** other.value, this.type, this.position, this.context);\r\n        }\r\n    }\r\n\r\n    mod(other) {\r\n        if (other instanceof INumberNode) {\r\n            return new INumberNode(this.value % other.value, this.type, this.position, this.context);\r\n        }\r\n    }\r\n}\r\n\r\nclass IStringNode extends INode {\r\n    constructor(value, type, position = null, context = null) {\r\n        super(value, type, INode.IStringNode, position, context);\r\n\r\n        this.properties = {\r\n            length: () => new INumberNode(this.value.length - 2, dataTypes.Number, this.position)\r\n        };\r\n\r\n        this.methods = {\r\n            toUpperCase: toUpperCase(module.exports),\r\n            toLowerCase: toLowerCase(module.exports),\r\n            split: split(module.exports),\r\n        };\r\n    }\r\n\r\n    add(other) {\r\n        if (other instanceof IStringNode) {\r\n            return new IStringNode(`\"${this.stripQuotes(this.value)}${this.stripQuotes(other.value)}\"`, this.type, this.position, this.context);\r\n        }\r\n    }\r\n\r\n    index(index) {\r\n        const value = this.stripQuotes(this.value)[index];\r\n        if (value === undefined) return value;\r\n\r\n        return new IStringNode(`\"${value}\"`, this.type, this.position, this.context);\r\n    }\r\n\r\n    stripQuotes(value) {\r\n        return value.replace(/\"/g, \"\");\r\n    }\r\n}\r\n\r\nclass IBooleanNode extends INode {\r\n    constructor(value, type, position = null, context = null) {\r\n        super(value, type, INode.IBooleanNode, position, context);\r\n    }\r\n}\r\n\r\nclass IArrayNode extends INode {\r\n    constructor(value, type, position = null, context = null) {\r\n        super(getArrayValue(value), type, INode.IArrayNode, position, context);\r\n\r\n        this.methods = {\r\n            push: push(module.exports),\r\n            pop: pop(module.exports)\r\n        };\r\n\r\n        this.properties = {\r\n            length: () => new INumberNode(this.elements.length, dataTypes.Number, this.position)\r\n        };\r\n\r\n        this.elements = value;\r\n        this.getValue = getArrayValue;\r\n    }\r\n}\r\n\r\nclass IEnumNode extends INode {\r\n    constructor(value, type, position = null, context = null) {\r\n        super(getEnumValue(value), type, INode.IEnumNode, position, context);\r\n\r\n        this.elements = value.map(element => new IEnumValueNode(element, dataTypes.EnumValue, position, context));\r\n        this.getValue = getEnumValue;\r\n    }\r\n}\r\n\r\nclass IEnumValueNode extends INode {\r\n    constructor(value, type, position = null, context = null) {\r\n        super(value, type, INode.IEnumValueNode, position, context);\r\n    }\r\n\r\n    wrap() {\r\n        return new IEnumNode([this.value], dataTypes.Enum, this.position, this.context);\r\n    }\r\n}\r\n\r\nclass IBaseStructNode extends INode {\r\n    constructor(name, structure, type, position = null, context = null) {\r\n        super(getBaseStructValue(name, structure), type, INode.IBaseStructNode, position, context);\r\n\r\n        this.name = name;\r\n        this.structure = structure;\r\n    }\r\n}\r\n\r\nclass IStructNode extends INode {\r\n    constructor(name, value, type, position = null, context = null) {\r\n        super(getStructValue(name, value), type, INode.IStructNode, position, context);\r\n\r\n        this.structure = value;\r\n        this.name = name;\r\n        this.update(false);\r\n    }\r\n\r\n    update(setValue = true) {\r\n        for (let i = 0; i < this.structure.length; i++) {\r\n            this.structure[i].value.parent = this;\r\n\r\n            if ([INode.IFunctionNode, INode.IBuiltInFunctionNode].includes(this.structure[i].value.nodeType)) {\r\n                this.methods[this.structure[i].name] = this.structure[i].value;\r\n            }\r\n            else {\r\n                this.properties[this.structure[i].name] = () => this.structure[i].value;\r\n            }\r\n        }\r\n\r\n        if (setValue) {\r\n            this.value = getStructValue(this.name, this.structure);\r\n\r\n            let parentClone = this.parent;\r\n\r\n            while (parentClone !== null) {\r\n                parentClone.update();\r\n                parentClone = parentClone.parent;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass IBaseFunction {\r\n    constructor(returnType, name, args, position, context) {\r\n        this.returnType = returnType;\r\n        this.name = name;\r\n        this.args = args;\r\n        this.type = dataTypes.Function;\r\n        this.value = `<${name}>`;\r\n        this.parent = null;\r\n\r\n        this.position = position;\r\n        this.context = context;\r\n\r\n        this.properties = {\r\n            name: () => new IStringNode(`\"${this.name}\"`, dataTypes.String, this.position, this.context)\r\n        };\r\n    }\r\n\r\n    toString() {\r\n        return this.value;\r\n    }\r\n}\r\n\r\nclass IFunctionNode extends IBaseFunction {\r\n    constructor(returnType, name, args, body, position = null, context = null) {\r\n        super(returnType, `fn ${name}`, args, position, context);\r\n\r\n        this.body = body;\r\n        this.nodeType = INode.IFunctionNode;\r\n    }\r\n}\r\n\r\nclass IBuiltInFunctionNode extends IBaseFunction {\r\n    constructor(returnType, name, args, execute) {\r\n        super(returnType, `built-in ${name}`, args);\r\n\r\n        this.execute = execute;\r\n        this.nodeType = INode.IBuiltInFunctionNode;\r\n    }\r\n\r\n    static getArg(wantedArg, args) {\r\n        return args.filter(arg => arg.name === wantedArg)[0].value;\r\n    }\r\n}\r\n\r\nclass IMultiResultNode {\r\n    constructor(nodes, position = null, context = null) {\r\n        this.nodes = nodes;\r\n        this.position = position;\r\n        this.context = context;\r\n        this.nodeType = INode.IMultiResultNode;\r\n    }\r\n\r\n    toString() {\r\n        return `<INode ${this.nodeType}>`;\r\n    }\r\n}\r\n\r\nclass IForceControlNode {\r\n    constructor(nodeToControl, continueControl = false, breakControl = false) {\r\n        this.nodeToControl = nodeToControl;\r\n        this.continue = continueControl;\r\n        this.break = breakControl;\r\n        this.nodeType = INode.IForceControlNode;\r\n    }\r\n\r\n    toString() {\r\n        return `<INode ${this.nodeType}>`;\r\n    }\r\n}\r\n\r\nclass IReturnNode {\r\n    constructor(value, nodeToReturnValueTo, position = null, context = null) {\r\n        this.value = value;\r\n        this.nodeToReturnValueTo = nodeToReturnValueTo;\r\n        this.position = position;\r\n        this.context = context;\r\n        this.nodeType = INode.IReturnNode;\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    INode,\r\n    INumberNode,\r\n    IStringNode,\r\n    IBooleanNode,\r\n    IArrayNode,\r\n    IEnumNode,\r\n    IEnumValueNode,\r\n    IBaseStructNode,\r\n    IStructNode,\r\n\r\n    IFunctionNode,\r\n    IBuiltInFunctionNode,\r\n\r\n    IMultiResultNode,\r\n    IForceControlNode,\r\n    IReturnNode,\r\n};\r\n\r\nfunction getArrayValue(elements) {\r\n    let valueStr = \"[ \";\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n        valueStr += elements[i].value;\r\n\r\n        if (i < elements.length - 1) {\r\n            valueStr += \", \";\r\n        }\r\n    }\r\n\r\n    return valueStr + \" ]\";\r\n}\r\n\r\nfunction getEnumValue(elements) {\r\n    let valueStr = \"{ \";\r\n\r\n    for (let i = 0; i < elements.length; i++) {\r\n        valueStr += elements[i];\r\n\r\n        if (i < elements.length - 1) {\r\n            valueStr += \", \";\r\n        }\r\n    }\r\n\r\n    return valueStr + \" }\";\r\n}\r\n\r\nfunction getBaseStructValue(name, structure) {\r\n    let valueStr = \"\";\r\n\r\n    for (let i = 0; i < structure.length; i++) {\r\n        if (structure[i].type.nodeType === INode.IBaseStructNode) {\r\n            valueStr += `${structure[i].name}: ${getBaseStructValue(structure[i].type.name, structure[i].type.structure)}`;\r\n        }\r\n        else valueStr += `${structure[i].name}: ${structure[i].type}`;\r\n\r\n        if (i < structure.length - 1) {\r\n            valueStr += \", \";\r\n        }\r\n    }\r\n\r\n    return `${name} { ${valueStr} }`;\r\n}\r\n\r\nfunction getStructValue(name, structure) {\r\n    let valueStr = \"\";\r\n\r\n    for (let i = 0; i < structure.length; i++) {\r\n        if (structure[i].value.nodeType === INode.IBaseStructNode) {\r\n            valueStr += `${structure[i].name}: ${getBaseStructValue(structure[i].value.name, structure[i].value.structure)}`;\r\n        }\r\n        else valueStr += `${structure[i].name}: ${structure[i].value.value}`;\r\n\r\n        if (i < structure.length - 1) {\r\n            valueStr += \", \";\r\n        }\r\n    }\r\n\r\n    return `${name} { ${valueStr} }`;\r\n}","const { IBooleanNode } = require(\"./INodes.js\");\r\nconst { dataTypes } = require(\"../constants.js\");\r\nconst { toBoolean } = require(\"../utils.js\");\r\n\r\nfunction ICompare(left, right, operation) {\r\n    if (compareFuncs[operation] === undefined) return null;\r\n    return compareFuncs[operation](left, right);\r\n}\r\n\r\nconst compareFuncs = {\r\n    eq: function(left, right) {\r\n        if (left.nodeType === right.nodeType) {\r\n            return new IBooleanNode(toBoolean(left.value) === toBoolean(right.value) ? \"True\" : \"False\", dataTypes.Bool, left.position, left.context);\r\n        }\r\n    },\r\n\r\n    neq: function(left, right) {\r\n        if (left.nodeType === right.nodeType) {\r\n            return new IBooleanNode(toBoolean(left.value) !== toBoolean(right.value) ? \"True\" : \"False\", dataTypes.Bool, left.position, left.context);\r\n        }\r\n    },\r\n\r\n    lt: function(left, right) {\r\n        if (left.nodeType === right.nodeType) {\r\n            return new IBooleanNode(toBoolean(left.value) < toBoolean(right.value) ? \"True\" : \"False\", dataTypes.Bool, left.position, left.context);\r\n        }\r\n    },\r\n\r\n    lte: function(left, right) {\r\n        if (left.nodeType === right.nodeType) {\r\n            return new IBooleanNode(toBoolean(left.value) <= toBoolean(right.value) ? \"True\" : \"False\", dataTypes.Bool, left.position, left.context);\r\n        }\r\n    },\r\n\r\n    gt: function(left, right) {\r\n        if (left.nodeType === right.nodeType) {\r\n            return new IBooleanNode(toBoolean(left.value) > toBoolean(right.value) ? \"True\" : \"False\", dataTypes.Bool, left.position, left.context);\r\n        }\r\n    },\r\n\r\n    gte: function(left, right) {\r\n        if (left.nodeType === right.nodeType) {\r\n            return new IBooleanNode(toBoolean(left.value) >= toBoolean(right.value) ? \"True\" : \"False\", dataTypes.Bool, left.position, left.context);\r\n        }\r\n    },\r\n\r\n    and: function(left, right) {\r\n        if (left.nodeType === right.nodeType) {\r\n            return new IBooleanNode(toBoolean(left.value) && toBoolean(right.value) ? \"True\" : \"False\", dataTypes.Bool, left.position, left.context);\r\n        }\r\n    },\r\n\r\n    or: function(left, right) {\r\n        if (left.nodeType === right.nodeType) {\r\n            return new IBooleanNode(toBoolean(left.value) || toBoolean(right.value) ? \"True\" : \"False\", dataTypes.Bool, left.position, left.context);\r\n        }\r\n    },\r\n\r\n    not: function(left) {\r\n        return new IBooleanNode(!toBoolean(left.value) ? \"True\" : \"False\", dataTypes.Bool, left.position, left.context);\r\n    },\r\n\r\n    assign: function(left, right) {\r\n        if (left.nodeType === right.nodeType) {\r\n            return right;\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = ICompare;","const { Error } = require(\"../error.js\");\r\nconst { isError, toBoolean, Context, SymbolTable } = require(\"../utils.js\");\r\n\r\nconst { INumberNode, IStringNode, IBooleanNode, IArrayNode, IEnumNode, IBaseStructNode, IStructNode, IMultiResultNode, IForceControlNode, IFunctionNode, IReturnNode, INode } = require(\"./INodes.js\");\r\nconst { Node } = require(\"../parser/nodes.js\");\r\nconst ICompare = require(\"./compare.js\");\r\nconst { dataTypes, assignmentOperators } = require(\"../constants.js\");\r\n\r\nmodule.exports = class Interpreter {\r\n    visit(node, context) {\r\n        if (node === null || this[node.nodeType] === undefined) return new Error(undefined, Error.RuntimeError, `<Node: ${node === undefined || node === null ? node : node.nodeType}> was not expected`, context);\r\n\r\n        const toVisit = this[node.nodeType].bind(this);\r\n        return toVisit(node, context);\r\n    }\r\n\r\n    Error(node, context) {\r\n        node.context = context;\r\n        return node;\r\n    }\r\n\r\n    StatementsNode(node, context) {\r\n        let statements = [];\r\n\r\n        for (let i = 0; i < node.nodes.length; i++) {\r\n            const statement = this.visit(node.nodes[i], context);\r\n\r\n            if (statement !== null && statement.error !== undefined) return statement;\r\n\r\n            if (context.shouldReturn) return statement;\r\n            if (context.shouldContinue || context.shouldBreak) break;\r\n            \r\n            if (!isError(statement) && statement.nodeType === INode.IForceControlNode) {\r\n                if (statement.continue) statement.nodeToControl.shouldContinue = true;\r\n                else if (statement.break) statement.nodeToControl.shouldBreak = true;\r\n\r\n                break;\r\n            }\r\n\r\n            else if (!isError(statement) && statement.nodeType === INode.IReturnNode) {\r\n                statement.nodeToReturnValueTo.shouldReturn = true;\r\n                return statement;\r\n            }\r\n\r\n            if (statement === null) continue;\r\n            statements.push(statement);\r\n        }\r\n\r\n        return new IMultiResultNode(statements, null, context);\r\n    }\r\n\r\n    NumberNode(node, context) {\r\n        return new INumberNode(node.token.value, node.token.type, node.token.position, context);\r\n    }\r\n\r\n    StringNode(node, context) {\r\n        return new IStringNode(node.token.value, node.token.type, node.token.position, context);\r\n    }\r\n\r\n    BooleanNode(node, context) {\r\n        return new IBooleanNode(node.token.value, node.token.type, node.token.position, context);\r\n    }\r\n\r\n    BaseStructNode(node, context) {\r\n        let structure = [];\r\n\r\n        const structName = node.name.value;\r\n\r\n        for (let i = 0; i < node.structure.length; i++) {\r\n            const name = node.structure[i].identifier.value;\r\n            const type = node.structure[i].dataType;\r\n            const writable = node.structure[i].writable;\r\n\r\n            if (type.nodeType === Node.VariableAccessNode) {\r\n                const processedType = this.visit(type, context);\r\n                if (isError(processedType)) return processedType;\r\n\r\n                if (processedType.nodeType !== INode.IBaseStructNode) {\r\n                    return new Error(processedType.position, Error.RuntimeError, `Received non-struct type for identifier: \"${name}\" in struct`, context);\r\n                }\r\n\r\n                structure.push({ name, type: processedType, writable });\r\n                continue;\r\n            }\r\n\r\n            structure.push({ name, type: type.value, writable });\r\n        }\r\n\r\n        return new IBaseStructNode(structName, structure, dataTypes.Struct, node.position, context);\r\n    }\r\n\r\n    StructNode(node, context) {\r\n        const baseStruct = this.visit(node.name, context);\r\n        if (isError(baseStruct)) return baseStruct;\r\n\r\n        if (baseStruct.nodeType !== INode.IBaseStructNode) {\r\n            return new Error(baseStruct.position, Error.RuntimeError, `Can't instantiate node: ${baseStruct}`, context);\r\n        }\r\n\r\n        if (baseStruct.structure.length !== node.args.length) {\r\n            return new Error(node.position, Error.RuntimeError, `Expected ${baseStruct.structure.length} arguments. Received ${node.args.length} arguments`, context);\r\n        }\r\n\r\n        const args = this._processArgs(true, node.args, baseStruct.structure, context);\r\n        if (isError(args)) return args;\r\n\r\n        return new IStructNode(baseStruct.name, args, dataTypes.Struct, node.position, context);\r\n    }\r\n\r\n    UnaryOpNode(node, context) {\r\n        let factor = this.visit(node.token || node.node, context);\r\n        if (isError(factor)) return factor;\r\n\r\n        if (node.operationToken.type === \"SUB\") {\r\n            factor = factor.mul(new INumberNode(-1));\r\n        }\r\n\r\n        else if (node.operationToken.type === \"NOT\") {\r\n            factor = ICompare(factor, null, node.operationToken.type.toLowerCase());\r\n        }\r\n\r\n        return factor;\r\n    }\r\n\r\n    BinOpNode(node, context) {\r\n        const left = this.visit(node.leftNode, context);\r\n        if (isError(left)) return left;\r\n        \r\n        let operationFunc = node.operation;\r\n        let assign = false;\r\n\r\n        if (operationFunc === \"dot\") return this._processDotExpression(left, node, context);\r\n\r\n        const right = this.visit(node.rightNode, context);\r\n        if (isError(right)) return right;\r\n\r\n        if (assignmentOperators.includes(operationFunc)) {\r\n            operationFunc = operationFunc.replace(\"_eq\", \"\");\r\n            assign = true;\r\n        }\r\n\r\n        let result = left[operationFunc] === undefined ? ICompare(left, right, operationFunc) : left[operationFunc](right);\r\n        if (isError(result)) return new Error(node.operationToken.position, Error.RuntimeError, `Can't do operations on type ${right.type} to ${left.type}`, context);\r\n\r\n        if (assign) {\r\n            if (node.leftIdentifierValue === undefined) {\r\n                const propertyName = this._getPropertyName(node.leftNode);\r\n                if (left.parent === null) return new Error(node.operationToken.position, Error.RuntimeError, `Can't assign to immutable property: \"${propertyName}\"`, context);\r\n                \r\n                const property = left.parent.structure.filter(value => value.name === propertyName)[0];\r\n\r\n                if (!property.writable) return new Error(node.operationToken.position, Error.RuntimeError, `Can't assign to immutable property: \"${propertyName}\"`, context);\r\n\r\n                property.value = right;\r\n                left.parent.update();\r\n\r\n                return null;\r\n            }\r\n\r\n            context.symbolTable.update(node.leftIdentifierValue, result);\r\n            return null;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    ArrayNode(node, context) {\r\n        let elements = [];\r\n\r\n        for (let i = 0; i < node.elements.length; i++) {\r\n            const value = this.visit(node.elements[i], context);\r\n            if (isError(value)) return value;\r\n\r\n            elements.push(value);\r\n        }\r\n\r\n        return new IArrayNode(elements, node.type, node.position, context);\r\n    }\r\n\r\n    EnumNode(node, context) {\r\n        return new IEnumNode(node.elements, node.type, node.position, context);\r\n    }\r\n\r\n    VariableAssignNode(node, context) {\r\n        const name = node.name.value;\r\n        const position = node.name.position;\r\n        let type = node.type.value;\r\n\r\n        const value = this.visit(node.value, context);\r\n        if (isError(value)) return value;\r\n\r\n        if (value.nodeType === INode.IStructNode) {\r\n            if (value.name !== type) {\r\n                return new Error(position, Error.RuntimeError, `Can't assign data type: \"${value.name}\" to \"${type}\"`, context);\r\n            }\r\n\r\n            type = value.type;\r\n        }\r\n\r\n        if (convertToDatatypes(type) !== value.type) {\r\n            return new Error(position, Error.RuntimeError, `Can't assign type ${value.type} to ${type.toUpperCase()}`, context);\r\n        }\r\n\r\n        if (!context.symbolTable.set(name, value)) {\r\n            return new Error(position, Error.RuntimeError, `Variable \"${name}\" is already defined`, context);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    VariableAccessNode(node, context) {\r\n        const name = node.name.value;\r\n\r\n        let value = context.symbolTable.get(name);\r\n\r\n        if (value === undefined) {\r\n            return new Error(node.name.position, Error.RuntimeError, `Variable \"${name}\" is not defined`, context);\r\n        }\r\n\r\n        return this._processIndexes(value, node.indexes, node.name.position, context);\r\n    }\r\n\r\n    CallNode(node, context) {\r\n        let func = this.visit(node.nodeToCall, context);\r\n        if (isError(func)) return func;\r\n\r\n        if (func.nodeType !== INode.IFunctionNode && func.nodeType !== INode.IBuiltInFunctionNode) {\r\n            return new Error(node.nodeToCall.name.position, Error.RuntimeError, `${func} is not a function`, context);\r\n        }\r\n\r\n        if (func.body === null) return null;\r\n\r\n        func.context = new Context(func.value, new SymbolTable(context.symbolTable), context, false, true);\r\n\r\n        if (node.args.length !== func.args.length) {\r\n            return new Error(node.nodeToCall.name.position, Error.RuntimeError, `Expected ${func.args.length} arguments. Received ${node.args.length} arguments`, context);\r\n        }\r\n\r\n        const isBuiltInFunction = func.nodeType === INode.IBuiltInFunctionNode ? true : false;\r\n\r\n        let builtInFunctionArgs = this._processArgs(isBuiltInFunction, node.args, func.args, context, func);\r\n        if (isError(builtInFunctionArgs)) return builtInFunctionArgs;\r\n\r\n        let result = undefined;\r\n\r\n        if (isBuiltInFunction) {\r\n            func.context.parent = context;\r\n            result = functionReturnFormat(func.execute(builtInFunctionArgs, func.context), func);\r\n        }\r\n        else result = functionReturnFormat(this.visit(func.body, func.context), func);\r\n\r\n        if (isError(result)) return result;\r\n        if (isError(result.value)) return result.value;\r\n\r\n        if (result.type !== func.returnType && func.returnType !== dataTypes.Null) {\r\n            return new Error(node.nodeToCall.name.position, Error.TypeError, `Expected return type: ${func.returnType}. Received: ${result.type}`, func.context);\r\n        }\r\n        \r\n        return result.value;\r\n    }\r\n\r\n    FunctionNode(node, context) {\r\n        const name = node.name.value;\r\n        const returnType = convertToDatatypes(node.returnType.value);\r\n        const args = [];\r\n\r\n        for (let i = 0; i < node.args.length; i++) {\r\n            args.push({\r\n                type: convertToDatatypes(node.args[i].type.value || node.args[i].type),\r\n                name: node.args[i].name.value\r\n            });\r\n        }\r\n\r\n        const func = new IFunctionNode(returnType, name, args, node.body, node.name.position);\r\n        func.context = new Context(func.value, new SymbolTable(context.symbolTable), context, false, true);\r\n        \r\n        if (!context.symbolTable.set(name, func)) {\r\n            return new Error(node.name.position, Error.RuntimeError, `Function ${name}() is already defined`, context);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    ContinueNode(node, context) {\r\n        const controllableNode = context.isForceControllable();\r\n        if (controllableNode === null) return new Error(node.position, Error.InvalidSyntaxError, `Illegal continue statement`, context);\r\n\r\n        return new IForceControlNode(controllableNode, true, false);\r\n    }\r\n\r\n    BreakNode(node, context) {\r\n        const controllableNode = context.isForceControllable();\r\n        if (controllableNode === null) return new Error(node.position, Error.InvalidSyntaxError, `Illegal break statement`, context);\r\n\r\n        return new IForceControlNode(controllableNode, false, true);\r\n    }\r\n\r\n    ReturnNode(node, context) {\r\n        const nodeToReturnValueTo = context.isReturnable();\r\n        if (nodeToReturnValueTo === null) return new Error(node.position, Error.InvalidSyntaxError, `Illegal return statement`, context);\r\n\r\n        const value = this.visit(node.nodeToReturn, context);\r\n\r\n        return new IReturnNode(value, nodeToReturnValueTo, node.position, context);\r\n    }\r\n\r\n    IfNode(node, context) {\r\n        const newContext = new Context(\"<IfNode>\", new SymbolTable(context.symbolTable), context);\r\n\r\n        for (let i = 0; i < node.cases.length; i++) {\r\n            const condition = this.visit(node.cases[i].condition, newContext);\r\n            if (isError(condition)) return condition;\r\n\r\n            if (toBoolean(condition.value)) { \r\n                return this.visit(node.cases[i].expr, newContext);\r\n            }\r\n        }\r\n\r\n        if (node.elseCase !== null) {\r\n            return this.visit(node.elseCase, newContext);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    WhileNode(node, context) {\r\n        const newContext = new Context(\"<WhileNode>\", new SymbolTable(context.symbolTable), context, true);\r\n\r\n        if (node.body === null) return null;\r\n        let condition = this.visit(node.condition, newContext);\r\n        if (isError(condition)) return condition;\r\n\r\n        let result = [];\r\n\r\n        while (toBoolean(condition.value)) {\r\n            newContext.symbolTable.clear();\r\n            \r\n            const statements = this.visit(node.body, newContext);\r\n            if (isError(statements)) return statements;\r\n\r\n            if (statements.nodeType === INode.IReturnNode) return statements;\r\n\r\n            result.push(statements);\r\n\r\n            if (newContext.shouldContinue) newContext.shouldContinue = false;\r\n            else if (newContext.shouldBreak) break;\r\n\r\n            condition = this.visit(node.condition, newContext);\r\n        }\r\n\r\n        return new IMultiResultNode(result, null, context);\r\n    }\r\n\r\n    ForNode(node, context) {\r\n        const newContext = new Context(\"<ForNode>\", new SymbolTable(context.symbolTable), context, true);\r\n\r\n        if (node.body === null) return null;\r\n\r\n        let controls = {\r\n            start: 0,\r\n            end: 0,\r\n            step: 1,\r\n            value: null\r\n        }\r\n\r\n        if (Array.isArray(node.controls)) {\r\n            let interpretedControls = [];\r\n\r\n            for (let i = 0; i < node.controls.length; i++) {\r\n                const control = this.visit(node.controls[i], context);\r\n                if (isError(control)) return control;\r\n\r\n                if (control.type !== dataTypes.Number) {\r\n                    return new Error(control.position, Error.RuntimeError, `Expected type ${dataTypes.Number}. Received: ${control.type}`, newContext);\r\n                }\r\n\r\n                interpretedControls.push(control);\r\n            }\r\n\r\n            controls.start = interpretedControls[0].value;\r\n            controls.end = interpretedControls[1].value;\r\n            controls.step = interpretedControls[2].value;\r\n        }\r\n        else {\r\n            const variable = this.visit(node.controls, newContext);\r\n            if (isError(variable)) return variable;\r\n\r\n            controls.end = variable.elements ? variable.elements.length : variable.value;\r\n            controls.value = variable.elements ? variable.elements : null;\r\n\r\n            if (isNaN(controls.end)) {\r\n                return new Error(variable.position, Error.RuntimeError, `Can't loop through type: ${variable.type}`, newContext);\r\n            }\r\n        }\r\n\r\n        const variableName = node.variableName.value;\r\n\r\n        let index = new INumberNode(controls.start, dataTypes.Number, node.variableName.position, newContext);\r\n        let continueLooping = true;\r\n\r\n        if (!newContext.symbolTable.set(variableName, controls.value === null ? new INumberNode(index.value, index.type, index.position, newContext) : controls.value[index.value])) {\r\n            return new Error(node.variableName.position, Error.RuntimeError, `Variable '${variableName}' already exists`, newContext);\r\n        }\r\n\r\n        let result = [];\r\n\r\n        while (continueLooping) {\r\n            if ((controls.step >= 0 && index.value >= (controls.end - controls.step)) || (controls.step < 0 && index.value <= (controls.end - controls.step))) {\r\n                continueLooping = false;\r\n            }\r\n\r\n            const statements = this.visit(node.body, newContext);\r\n\r\n            if (statements === null) {\r\n                index.value += controls.step;\r\n                newContext.symbolTable.clear();\r\n                newContext.symbolTable.update(variableName, controls.value === null ? new INumberNode(index.value, index.type, index.position, newContext) : controls.value[index.value]);\r\n                continue;\r\n            }\r\n\r\n            if (isError(statements)) return statements;\r\n\r\n            if (statements.nodeType === INode.IReturnNode) return statements;\r\n\r\n            result.push(statements);\r\n\r\n            if (newContext.shouldContinue) newContext.shouldContinue = false;\r\n            else if (newContext.shouldBreak) break;\r\n\r\n            index.value += controls.step;\r\n            newContext.symbolTable.clear();\r\n\r\n            newContext.symbolTable.update(variableName, controls.value === null ? new INumberNode(index.value, index.type, index.position, newContext) : controls.value[index.value]);\r\n        }\r\n\r\n        return result.length === 0 ? null : new IMultiResultNode(result, null, context);\r\n    }\r\n\r\n    _processDotExpression(left, node, context, processRightNode = true) {\r\n        const nodeToProcess = processRightNode ? node.rightNode : node.leftNode;\r\n\r\n        //Get Methods\r\n        if (nodeToProcess.nodeType === Node.BinOpNode) {\r\n            const result = this._processDotExpression(left, nodeToProcess, context, false);\r\n            return this._processDotExpression(result, nodeToProcess, context, true);\r\n        }\r\n\r\n        else if (nodeToProcess.nodeType === Node.CallNode) {\r\n            if (left.methods[nodeToProcess.functionName] === undefined) {\r\n                return new Error(node.operationToken.position, Error.RuntimeError, `${left} doesn't contain method: \"${nodeToProcess.functionName}()\"`, context);\r\n            }\r\n\r\n            const receivedArgs = nodeToProcess.args;\r\n            const expectedArgs = left.methods[nodeToProcess.functionName].args;\r\n\r\n            if (receivedArgs.length !== expectedArgs.length) {\r\n                return new Error(nodeToProcess.nodeToCall.name.position, Error.RuntimeError, `Expected ${expectedArgs.length} arguments. Received ${receivedArgs.length} arguments`, context);\r\n            }\r\n\r\n            const isBuiltInFunction = left.methods[nodeToProcess.functionName].nodeType === INode.IFunctionNode ? false : true;\r\n\r\n            const func = left.methods[nodeToProcess.functionName];\r\n            func.context = new Context(func.value, new SymbolTable(context.symbolTable), context, false, true);\r\n\r\n            const args = this._processArgs(isBuiltInFunction, receivedArgs, expectedArgs, func.context, left.methods[nodeToProcess.functionName]);\r\n            if (isError(args)) return args;\r\n\r\n            if (isBuiltInFunction) args.push({ name: \"value\", value: left });\r\n\r\n            let result;\r\n\r\n            if (isBuiltInFunction) {\r\n                result = functionReturnFormat(func.execute(args, func.context), func);\r\n            }\r\n            else {\r\n                result = functionReturnFormat(this.visit(func.body, func.context), func);\r\n            }\r\n\r\n            if (isError(result)) return result;\r\n            if (isError(result.value)) return result.value;\r\n\r\n            if (result.type !== func.returnType && func.returnType !== dataTypes.Null) {\r\n                return new Error(left.position, Error.TypeError, `Expected return type: ${func.returnType}. Received: ${result.type}`, func.context);\r\n            }\r\n\r\n            return result.value;\r\n        }\r\n\r\n\r\n        //Get Properties\r\n\r\n        const identifierValue = processRightNode ? node.rightIdentifierValue : node.leftIdentifierValue;\r\n        const indexes = processRightNode ? node.rightIdentifierIndexes : node.leftIdentifierIndexes;\r\n\r\n        if (left.type === dataTypes.Enum) {\r\n            const result = left.elements.filter(enumValue => enumValue.value === identifierValue)[0];\r\n            return result !== undefined ? result : new Error(node.operationToken.position, Error.RuntimeError, `${left} doesn't contain value: \"${identifierValue}\"`, context);\r\n        }\r\n\r\n        if (!Object.keys(left.properties).includes(identifierValue)) {\r\n            return new Error(node.operationToken.position, Error.RuntimeError, `${left} doesn't contain property: \"${identifierValue}\"`, context);\r\n        }\r\n\r\n        return this._processIndexes(left.properties[identifierValue](), indexes, node.operationToken.position, context);\r\n    }\r\n\r\n    _processArgs(getResult, args, expectedArgs, context, func = null) {\r\n        let builtInFunctionArgs = [];\r\n\r\n        for (let i = 0; i < args.length; i++) {\r\n            let argValue = this.visit(args[i], context);\r\n            if (isError(argValue)) return argValue;\r\n\r\n            if (argValue.type === dataTypes.EnumValue) argValue = argValue.wrap();\r\n            \r\n            const expectedType = convertToDatatypes(expectedArgs[i].type.nodeType === INode.IBaseStructNode ? expectedArgs[i].type.type : expectedArgs[i].type);\r\n\r\n            if (expectedType !== argValue.type && expectedType !== dataTypes.Any) {\r\n                return new Error(argValue.position, Error.RuntimeError, `Expected type: ${expectedType}. Received: ${argValue.type}`, func === null ? context : func.context);\r\n            }\r\n\r\n            if (!getResult && func !== null && !func.context.symbolTable.set(expectedArgs[i].name, argValue)) {\r\n                console.log(getResult, func, context)\r\n                return new Error(argValue.position, Error.RuntimeError, `Argument name: \"${expectedArgs[i].name}\" is already taken`);\r\n            }\r\n            else {\r\n                const result = {\r\n                    name: expectedArgs[i].name,\r\n                    value: argValue,\r\n                };\r\n\r\n                if (expectedArgs[i].writable !== undefined) result.writable = expectedArgs[i].writable;\r\n\r\n                builtInFunctionArgs.push(result);\r\n            }\r\n        }\r\n\r\n        return getResult ? builtInFunctionArgs : true;\r\n    }\r\n\r\n    _getPropertyName(node) {\r\n        if (node.nodeType === Node.BinOpNode) {\r\n            return this._getPropertyName(node.rightNode);\r\n        }\r\n\r\n        return node.nodeType === Node.VariableAccessNode ? node.name.value : node.functionName;\r\n    }\r\n\r\n    _processIndexes(value, indexes, position, context) {\r\n        if (indexes.length > 0 && ![dataTypes.Array, dataTypes.Enum, dataTypes.String].includes(value.type)) {\r\n            return new Error(position, Error.RuntimeError, `Data type: ${value.type} is not indexable`, context);\r\n        }\r\n\r\n        for (let i = 0; i < indexes.length; i++) {\r\n            const index = this.visit(indexes[i], context);\r\n            if (isError(index)) return index;\r\n\r\n            if (index.nodeType !== INode.INumberNode) return new Error(position, Error.RuntimeError, `Unexpected type received for index: ${index}`, context);\r\n\r\n            value = value.elements === undefined ? value.index(index.value) : value.elements[index.value];\r\n\r\n            if (value === undefined) {\r\n                return new Error(position, Error.IndexOutOfBoundsError, `Index out of bounds: ${index.value}`, context);\r\n            }\r\n        }\r\n\r\n        return value;\r\n    }\r\n}\r\n\r\nfunction convertToDatatypes(type) {\r\n    if (type === \"int\" || type === \"INT\") return dataTypes.Number;\r\n    else if (type === \"fn\") return dataTypes.Function;\r\n    return type.toUpperCase();\r\n}\r\n\r\nfunction functionReturnFormat(input, func) {\r\n    let result = {\r\n        type: dataTypes.Number,\r\n        value: new INumberNode(0, dataTypes.Number, null, func.context)\r\n    };\r\n\r\n    if (func.returnType === dataTypes.Null && func.nodeType === INode.IBuiltInFunctionNode) return result;\r\n\r\n    if (input.nodeType !== INode.IMultiResultNode && func.returnType === dataTypes.Null) return new Error(func.position, Error.RuntimeError, \"No return value expected\", func.context);\r\n    else if (input.nodeType === INode.IMultiResultNode && func.returnType !== dataTypes.Null) return new Error(func.position, Error.RuntimeError, \"Expected return value\", func.context);\r\n\r\n    if (input.error !== undefined) return input;\r\n\r\n    else if (input.nodeType === INode.IReturnNode) {\r\n        result.value = input.value.type === dataTypes.EnumValue ? input.value.wrap() : input.value;\r\n        result.type = result.value.type;\r\n    }\r\n    else if (input.nodeType !== INode.IMultiResultNode) {\r\n        result.value = input;\r\n        result.type = input.type;\r\n    }\r\n\r\n    return result;\r\n}","const { Context, SymbolTable, APICaller } = require(\"../utils.js\");\r\n\r\nconst {\r\n    NumberType, StringType,\r\n    Print, Clear,\r\n    IsArray, IsNumber, IsString, IsEnum, IsBoolean, IsFunction, Typeof,\r\n    getMath\r\n} = require(\"../builtInFunctions/wrapper.js\");\r\n\r\nmodule.exports = function() {\r\n    const context = new Context(\"<Global>\", new SymbolTable());\r\n    context.apiCaller = new APICaller();\r\n    \r\n    context.symbolTable.set(\"Number\", NumberType());\r\n    context.symbolTable.set(\"String\", StringType());\r\n\r\n    context.symbolTable.set(\"Print\", Print());\r\n    context.symbolTable.set(\"Clear\", Clear());\r\n\r\n    context.symbolTable.set(\"IsArray\", IsArray());\r\n    context.symbolTable.set(\"IsNumber\", IsNumber());\r\n    context.symbolTable.set(\"IsString\", IsString());\r\n    context.symbolTable.set(\"IsEnum\", IsEnum());\r\n    context.symbolTable.set(\"IsBoolean\", IsBoolean());\r\n    context.symbolTable.set(\"IsFunction\", IsFunction());\r\n\r\n    context.symbolTable.set(\"Typeof\", Typeof());\r\n\r\n    context.symbolTable.set(\"Math\", getMath());\r\n    \r\n    return context;\r\n}","const rules = require(\"./constants.js\").lexerRules;\r\n\r\nconst { Token, TokenStream, Position, getString } = require(\"./utils.js\");\r\nconst { Error } = require(\"./error.js\");\r\n\r\nmodule.exports = function(input) {\r\n    if (typeof input !== \"string\" || input.length === 0) return new TokenStream([]);\r\n\r\n    const lines = input.split(\"\\n\");\r\n    let tokens = [];\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const sanitizedLine = lines[i].replace(/\\r|\\t|\\n|\\r\\n/gm, \"\");\r\n\r\n        const tokensInLine = sanitizedLine.split(/([(-)]|[{-}]|\\[|\\]|\\/\\/|\\+=|-=|\\*=|\\/=|\\^=|\\+|-|\\*|\\/|\\^|<=|>=|[<>]|&|~|!=|!|,|\"|\\.|:)| /g)\r\n                                          .filter(token => token !== undefined && token !== \"\");\r\n\r\n        tokensInLine.unshift(\"\\n\");\r\n\r\n        let currentIndexInLine = 0;\r\n        let inString = false;\r\n\r\n        if (tokensInLine[1] === \"//\") {\r\n            continue;\r\n        }\r\n\r\n        for (let tokenIndex = 0; tokenIndex < tokensInLine.length; tokenIndex++) {\r\n            const token = tokensInLine[tokenIndex];\r\n            const charPosition = sanitizedLine.indexOf(token, currentIndexInLine);\r\n            const currentPosition = new Position(tokenIndex, i, charPosition === -1 ? 0 : charPosition);\r\n            currentIndexInLine = currentPosition.char;\r\n\r\n            if (inString && token !== `\"`) {\r\n                continue;\r\n            }\r\n            else if (inString && token === `\"`) {\r\n                inString = false;\r\n                currentIndexInLine++;\r\n                continue;\r\n            }\r\n\r\n            if (token === `\"`) {\r\n                const stringData = getString(sanitizedLine, currentIndexInLine);\r\n                if (stringData.error !== null) return new Error(currentPosition, Error.InvalidSyntaxError, stringData.error);\r\n\r\n                tokens.push(new Token(\"STRING\", stringData.value, currentPosition));\r\n                inString = true;\r\n                continue;\r\n            }\r\n\r\n            for (let j = 0; j < rules.length; j++) {\r\n                if (rules[j][1].test(token)) {\r\n                    tokens.push(new Token(rules[j][0], token, currentPosition));\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const lastToken = tokens[tokens.length - 1];\r\n    let eofPosition = lastToken === undefined ? new Position(0, 0, 0) :  lastToken.position;\r\n    \r\n    if (lastToken !== undefined) {\r\n        eofPosition.index += 1;\r\n        eofPosition.char += lastToken.value.length;\r\n    }\r\n\r\n    return new TokenStream(tokens.concat(new Token(\"EOF\", \"EOF\", eofPosition)));\r\n}","//////////////////////////////////////////////////\r\n//                   GENERAL                    //\r\n//////////////////////////////////////////////////\r\n\r\nclass Node {\r\n    static StatementsNode = \"StatementsNode\";\r\n    static NumberNode = \"NumberNode\";\r\n    static UnaryOpNode = \"UnaryOpNode\";\r\n    static BinOpNode = \"BinOpNode\";\r\n    static ArrayNode = \"ArrayNode\";\r\n    static EnumNode = \"EnumNode\";\r\n    static BaseStructNode = \"BaseStructNode\";\r\n    static StructNode = \"StructNode\";\r\n    static VariableAssignNode = \"VariableAssignNode\";\r\n    static VariableAccessNode = \"VariableAccessNode\";\r\n    static IfNode = \"IfNode\";\r\n    static ForNode = \"ForNode\";\r\n    static WhileNode = \"WhileNode\";\r\n    static CallNode = \"CallNode\";\r\n    static FunctionNode = \"FunctionNode\";\r\n    static ReturnNode = \"ReturnNode\";\r\n    static BreakNode = \"BreakNode\";\r\n    static ContinueNode = \"ContinueNode\";\r\n\r\n    constructor(nodeType) {\r\n        this.nodeType = nodeType;\r\n    }\r\n\r\n    toString() {\r\n        return `<Node ${this.nodeType}>`;\r\n    }\r\n}\r\n\r\nclass StatementsNode extends Node {\r\n    constructor(nodes) {\r\n        super(\"StatementsNode\");\r\n\r\n        this.nodes = nodes;\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////\r\n//                  DATA TYPES                  //\r\n//////////////////////////////////////////////////\r\n\r\nclass NumberNode extends Node {\r\n    constructor(token) {\r\n        super(\"NumberNode\");\r\n\r\n        this.token = token;\r\n    }\r\n}\r\n\r\nclass UnaryOpNode extends Node {\r\n    constructor(operationToken, node) {\r\n        super(\"UnaryOpNode\");\r\n\r\n        this.operationToken = operationToken;\r\n        this.node = node;\r\n    }\r\n}\r\n\r\nclass BinOpNode extends Node {\r\n    constructor(leftNode, operationToken, rightNode) {\r\n        super(\"BinOpNode\");\r\n\r\n        this.leftNode = leftNode;\r\n        this.operationToken = operationToken;\r\n        this.rightNode = rightNode;\r\n    }\r\n\r\n    get operation() {\r\n        return this.operationToken.type.toLowerCase();\r\n    }\r\n\r\n    get leftIdentifierValue() {\r\n        return this.leftNode.name?.value;\r\n    }\r\n\r\n    get leftIdentifierIndexes() {\r\n        return this.leftNode.indexes;\r\n    }\r\n\r\n    get rightIdentifierValue() {\r\n        return this.rightNode.name?.value;\r\n    }\r\n\r\n    get rightIdentifierIndexes() {\r\n        return this.rightNode.indexes;\r\n    }\r\n}\r\n\r\nclass StringNode extends Node {\r\n    constructor(token) {\r\n        super(\"StringNode\");\r\n\r\n        this.token = token;\r\n    }\r\n}\r\n\r\nclass BooleanNode extends Node {\r\n    constructor(token) {\r\n        super(\"BooleanNode\");\r\n\r\n        this.token = token;\r\n    }\r\n}\r\n\r\nclass ArrayNode extends Node {\r\n    constructor(elements, type, position) {\r\n        super(\"ArrayNode\");\r\n\r\n        this.elements = elements;\r\n        this.type = type;\r\n        this.position = position;\r\n    }\r\n}\r\n\r\nclass EnumNode extends Node {\r\n    constructor(elements, type, position) {\r\n        super(\"EnumNode\");\r\n\r\n        this.elements = elements;\r\n        this.type = type;\r\n        this.position = position;\r\n    }\r\n}\r\n\r\nclass BaseStructNode extends Node {\r\n    constructor(name, structure, position) {\r\n        super(\"BaseStructNode\");\r\n\r\n        this.name = name;\r\n        this.structure = structure;\r\n        this.position = position;\r\n    }\r\n}\r\n\r\nclass StructNode extends Node {\r\n    constructor(name, args, position) {\r\n        super(\"StructNode\");\r\n\r\n        this.name = name;\r\n        this.args = args;\r\n        this.position = position;\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////\r\n//                  VARIABLES                   //\r\n//////////////////////////////////////////////////\r\n\r\nclass VariableAssignNode extends Node {\r\n    constructor(name, value, type) {\r\n        super(\"VariableAssignNode\");\r\n\r\n        this.name = name;\r\n        this.value = value;\r\n        this.type = type;\r\n    }\r\n}\r\n\r\nclass VariableAccessNode extends Node {\r\n    constructor(name, indexes = []) {\r\n        super(\"VariableAccessNode\");\r\n\r\n        this.name = name;\r\n        this.indexes = indexes;\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////\r\n//                   KEYWORDS                   //\r\n//////////////////////////////////////////////////\r\n\r\nclass IfNode extends Node {\r\n    constructor(cases, elseCase) {\r\n        super(\"IfNode\");\r\n\r\n        this.cases = cases;\r\n        this.elseCase = elseCase;\r\n    }\r\n}\r\n\r\nclass ForNode extends Node {\r\n    constructor(variableName, controls, body) {\r\n        super(\"ForNode\");\r\n\r\n        this.variableName = variableName;\r\n        this.controls = controls;\r\n        this.body = body;\r\n    }\r\n}\r\n\r\nclass WhileNode extends Node {\r\n    constructor(condition, body) {\r\n        super(\"WhileNode\");\r\n\r\n        this.condition = condition;\r\n        this.body = body;\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////\r\n//                    FUNCTION                  //\r\n//////////////////////////////////////////////////\r\n\r\nclass CallNode extends Node {\r\n    constructor(nodeToCall, args) {\r\n        super(\"CallNode\");\r\n\r\n        this.nodeToCall = nodeToCall;\r\n        this.args = args;\r\n    }\r\n\r\n    get functionName() {\r\n        return this.nodeToCall.name.value;\r\n    }\r\n}\r\n\r\nclass FunctionNode extends Node {\r\n    constructor(returnType, name, args, body) {\r\n        super(\"FunctionNode\");\r\n\r\n        this.returnType = returnType;\r\n        this.name = name;\r\n        this.args = args;\r\n        this.body = body;\r\n    }\r\n}\r\n\r\n//////////////////////////////////////////////////\r\n//                FORCE CONTROLS                //\r\n//////////////////////////////////////////////////\r\n\r\nclass ReturnNode extends Node {\r\n    constructor(nodeToReturn, position) {\r\n        super(\"ReturnNode\");\r\n\r\n        this.nodeToReturn = nodeToReturn;\r\n        this.position = position;\r\n    }\r\n}\r\n\r\nclass BreakNode extends Node {\r\n    constructor(position) {\r\n        super(\"BreakNode\");\r\n\r\n        this.position = position;\r\n    }\r\n}\r\n\r\nclass ContinueNode extends Node {\r\n    constructor(position) {\r\n        super(\"ContinueNode\");\r\n\r\n        this.position = position;\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = {\r\n    Node,\r\n    StatementsNode,\r\n\r\n    NumberNode,\r\n    BinOpNode,\r\n    UnaryOpNode,\r\n    StringNode,\r\n    BooleanNode,\r\n    ArrayNode,\r\n    EnumNode,\r\n    BaseStructNode,\r\n    StructNode,\r\n\r\n    VariableAssignNode,\r\n    VariableAccessNode,\r\n\r\n    IfNode,\r\n    ForNode,\r\n    WhileNode,\r\n\r\n    CallNode,\r\n    FunctionNode,\r\n\r\n    ReturnNode,\r\n    BreakNode,\r\n    ContinueNode,\r\n};","const { Error } = require(\"../error.js\");\r\nconst { isError } = require(\"../utils.js\");\r\nconst { dataTypes, tokenTypes } = require(\"../constants.js\");\r\n\r\nconst {\r\n    Node,\r\n    StatementsNode,\r\n    NumberNode,\r\n    BinOpNode,\r\n    UnaryOpNode,\r\n    StringNode,\r\n    BooleanNode,\r\n    VariableAccessNode,\r\n    VariableAssignNode,\r\n    IfNode,\r\n    ArrayNode,\r\n    EnumNode,\r\n    BaseStructNode,\r\n    StructNode,\r\n    ForNode,\r\n    WhileNode,\r\n    CallNode,\r\n    FunctionNode,\r\n    ReturnNode,\r\n    BreakNode,\r\n    ContinueNode\r\n} = require(\"./nodes.js\");\r\n\r\nmodule.exports = class Parser {\r\n    constructor(tokens) {\r\n        this.tokens = tokens;\r\n    }\r\n\r\n    parse() {\r\n        return this.statements(false);\r\n    }\r\n\r\n\r\n\r\n    \r\n    //Tree Making Functions\r\n\r\n    statements(inBrackets) {\r\n        let statements = [];\r\n        \r\n        while (this.tokens.currentToken.type !== tokenTypes.EOF) {\r\n            while (this.tokens.currentToken.type === tokenTypes.NEWLINE) {\r\n                this.tokens.advance();\r\n            }\r\n\r\n            if (inBrackets && this.tokens.currentToken.type === tokenTypes.RBRACKET) break;\r\n\r\n            const statement = this.statement();\r\n            statements.push(statement);\r\n\r\n            if (isError(statement)) break;\r\n        }\r\n\r\n        return new StatementsNode(statements);\r\n    }\r\n\r\n    statement() {\r\n        const currentPosition = this.tokens.currentToken.position;\r\n\r\n        if (this.tokens.currentToken.matches(tokenTypes.KEYWORD, \"return\")) {\r\n            this.tokens.advance();\r\n\r\n            const expr = this.expr();\r\n            if (isError(expr)) return expr;\r\n\r\n            return new ReturnNode(expr, currentPosition);\r\n        }\r\n\r\n        else if (this.tokens.currentToken.matches(tokenTypes.KEYWORD, \"break\")) {\r\n            this.tokens.advance();\r\n            return new BreakNode(currentPosition);\r\n        }\r\n\r\n        else if (this.tokens.currentToken.matches(tokenTypes.KEYWORD, \"continue\")) {\r\n            this.tokens.advance();\r\n            return new ContinueNode(currentPosition);\r\n        }\r\n\r\n        return this.expr();\r\n    }\r\n\r\n    expr() {\r\n        if (this.tokens.currentToken.type === tokenTypes.TYPE) {\r\n            const variableType = this.tokens.currentToken;\r\n            const isStruct = variableType.value.toUpperCase() === dataTypes.Struct;\r\n            this.tokens.advance();\r\n\r\n            const variableName = this.tokens.currentToken;\r\n\r\n            if (this.tokens.currentToken.type !== tokenTypes.IDENTIFIER) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected identifier after type declaration\");\r\n            }\r\n\r\n            this.tokens.advance();\r\n\r\n            if (!isStruct) {\r\n                if (this.tokens.currentToken.type !== tokenTypes.ASSIGN) {\r\n                    return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected assignment after identifier declaration\");\r\n                }\r\n    \r\n                this.tokens.advance();\r\n            }\r\n\r\n            let value = isStruct ? this.structExpr(variableName) : this.expr();\r\n\r\n            if (isError(value)) return value;\r\n\r\n            return new VariableAssignNode(variableName, value, variableType);\r\n        }\r\n\r\n        else if (this.tokens.currentToken.type === tokenTypes.IDENTIFIER) {\r\n            const result = this.checkInitStruct();\r\n            if (result !== null) return result;\r\n        }\r\n\r\n        return this.binOp(this.compExpr.bind(this), [tokenTypes.OR, tokenTypes.AND]);\r\n    }\r\n\r\n    compExpr() {\r\n        if (this.tokens.currentToken.type === tokenTypes.NOT) {\r\n            const operationToken = this.tokens.currentToken;\r\n            this.tokens.advance();\r\n\r\n            const node = this.compExpr();\r\n            if (isError(node)) return node;\r\n\r\n            return new UnaryOpNode(operationToken, node);\r\n        }\r\n\r\n        return this.binOp(this.assignmentExpr.bind(this), [tokenTypes.EQ, tokenTypes.NEQ, tokenTypes.GT, tokenTypes.GTE, tokenTypes.LT, tokenTypes.LTE]);\r\n    }\r\n\r\n    assignmentExpr() {\r\n        return this.binOp(this.arithExpr.bind(this), [tokenTypes.ADD_EQ, tokenTypes.SUB_EQ, tokenTypes.MUL_EQ, tokenTypes.DIV_EQ, tokenTypes.MOD_EQ, tokenTypes.ASSIGN]);\r\n    }\r\n\r\n    arithExpr() {\r\n        return this.binOp(this.term.bind(this), [tokenTypes.ADD, tokenTypes.SUB]);\r\n    }\r\n\r\n    term() {\r\n        return this.binOp(this.factor.bind(this), [tokenTypes.MUL, tokenTypes.DIV, tokenTypes.MOD]);\r\n    }\r\n\r\n    factor() {\r\n        const currentToken = this.tokens.currentToken;\r\n\r\n        if (currentToken === null) return;\r\n        \r\n        if ([tokenTypes.SUB, tokenTypes.ADD, tokenTypes.NOT].includes(currentToken.type)) {\r\n            this.tokens.advance();\r\n\r\n            const factor = this.factor();\r\n\r\n            if (isError(factor)) return factor;\r\n\r\n            return new UnaryOpNode(currentToken, factor);\r\n        }\r\n        \r\n        return this.power();\r\n    }\r\n\r\n    power() {\r\n        return this.binOp(this.dot.bind(this), [tokenTypes.POW], this.factor.bind(this));\r\n    }\r\n\r\n    dot() {\r\n        let call = this.call();\r\n        const currentToken = this.tokens.currentToken;\r\n\r\n        if (currentToken.type === tokenTypes.DOT) {\r\n            this.tokens.advance();\r\n\r\n            const call2 = this.dot();\r\n            if (isError(call2)) return call2;\r\n\r\n            if (call.nodeType === Node.NumberNode && call2.nodeType === Node.NumberNode) call.token.value = `${call.token.value}.${call2.token.value}`;\r\n            else return new BinOpNode(call, currentToken, call2);\r\n        }\r\n\r\n        return call;\r\n    }\r\n\r\n    call() {\r\n        const atom = this.atom();\r\n\r\n        if (this.tokens.currentToken.type === tokenTypes.LPAR) {\r\n            const args = this.getArgs();\r\n            if (isError(args)) return args;\r\n            \r\n            this.tokens.advance();\r\n\r\n            return new CallNode(atom, args);\r\n        }\r\n\r\n        return atom;\r\n    }\r\n\r\n    atom() {\r\n        const currentToken = this.tokens.currentToken;\r\n\r\n        this.tokens.advance();\r\n\r\n        if (currentToken === null) return null;\r\n\r\n        if (currentToken.type === dataTypes.Number) return new NumberNode(currentToken);\r\n        else if (currentToken.type === dataTypes.String) return new StringNode(currentToken);\r\n        else if (currentToken.type === dataTypes.Bool) return new BooleanNode(currentToken);\r\n        else if (currentToken.type === tokenTypes.IDENTIFIER) {\r\n            const index = this.getIndexedValue(true, null);\r\n            if (isError(index)) return index;\r\n\r\n            return new VariableAccessNode(currentToken, index);\r\n        }\r\n\r\n        else if (currentToken.type === tokenTypes.LPAR) {\r\n            const result = this.expr();\r\n            if (isError(result)) return result;\r\n\r\n            if (this.tokens.currentToken.type !== tokenTypes.RPAR) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, `Expected ')'`);\r\n            }\r\n\r\n            this.tokens.advance();\r\n\r\n            return result;\r\n        }\r\n\r\n        else if (currentToken.type === tokenTypes.LBRACKET) return this.enumExpr();\r\n        else if (currentToken.type === tokenTypes.LSQUARE) return this.arrayExpr();\r\n        else if (currentToken.matches(tokenTypes.KEYWORD, \"fn\")) return this.functionExpr();\r\n        else if (currentToken.matches(tokenTypes.KEYWORD, \"if\")) return this.ifExpr();\r\n        else if (currentToken.matches(tokenTypes.KEYWORD, \"for\")) return this.forExpr();\r\n        else if (currentToken.matches(tokenTypes.KEYWORD, \"while\")) return this.whileExpr();\r\n        else if (currentToken.matches(tokenTypes.KEYWORD, \"new\")) return this.initStructExpr();\r\n        else return new Error(currentToken.position, Error.InvalidSyntaxError, `Unexpected token: ${currentToken.toString()}`);\r\n    }\r\n\r\n    binOp(func, operations, func2 = null) {\r\n        if (func2 === null) func2 = func;\r\n\r\n        let left = func();\r\n\r\n        if (isError(left, this.tokens.currentToken)) return left;\r\n\r\n        while (this.tokens.currentToken.type !== null && operations.includes(this.tokens.currentToken.type)) {\r\n            const operationToken = this.tokens.currentToken;\r\n            this.tokens.advance();\r\n            const right = func2();\r\n\r\n            if (isError(right)) return right;\r\n\r\n            left = new BinOpNode(left, operationToken, right);\r\n        }\r\n\r\n        return left;\r\n    }\r\n\r\n    //Special Expressions\r\n\r\n\r\n    functionExpr() {\r\n        const name = this.tokens.currentToken;\r\n\r\n        if (name.type !== tokenTypes.IDENTIFIER) {\r\n            return new Error(name.position, Error.InvalidSyntaxError, \"Expected function name after function initization\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        const args = this.getFunctionArgs();\r\n        if (isError(args)) return args;\r\n\r\n        this.tokens.advance();\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.COLON) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, `Expected colon (:) after arguments`);\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        const returnType = this.tokens.currentToken;\r\n\r\n        if (returnType.type !== tokenTypes.TYPE && !returnType.matches(tokenTypes.IDENTIFIER, \"null\")) {\r\n            return new Error(returnType.position, Error.InvalidSyntaxError, \"Expected function type\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.LBRACKET) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '{'\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        let body = null;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) body = this.statements(true);\r\n        if (body !== null && isError(body)) return body;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '}'\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n        \r\n        return new FunctionNode(returnType, name, args, body);\r\n    }\r\n\r\n\r\n\r\n    whileExpr() {\r\n        if (this.tokens.currentToken.type !== tokenTypes.LPAR) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '('\");\r\n        }\r\n\r\n        const condition = this.expr();\r\n        if (isError(condition)) return condition;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.LBRACKET) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '{'\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        let body = null;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) body = this.statements(true);\r\n        if (body !== null && isError(body)) return body;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '}'\");\r\n        } \r\n\r\n        this.tokens.advance();\r\n\r\n        return new WhileNode(condition, body);\r\n    }\r\n\r\n    forExpr() {\r\n        if (this.tokens.currentToken.type !== tokenTypes.LPAR) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '('\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.IDENTIFIER) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected identifier\");\r\n        }\r\n\r\n        const variableName = this.tokens.currentToken;\r\n\r\n        this.tokens.advance();\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.KEYWORD && this.tokens.currentToken.value !== \"in\") {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected identifier\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        const tokenType = this.tokens.currentToken.type;\r\n        const isDatatypeOrIdentifier = Object.values(dataTypes).includes(tokenType) || tokenType === tokenTypes.IDENTIFIER || tokenType === tokenTypes.LSQUARE || tokenType === tokenTypes.LBRACKET;\r\n\r\n        const controls = isDatatypeOrIdentifier ? this.expr() : this.getArgs();\r\n        if (isError(controls)) return controls;\r\n\r\n        if (!isDatatypeOrIdentifier && controls.length !== 3) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected 3 arguments\");\r\n        }\r\n\r\n        if (!isDatatypeOrIdentifier && this.tokens.currentToken.type !== tokenTypes.RPAR) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected ')'\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.LBRACKET) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '{'\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        let body = null;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) body = this.statements(true);\r\n\r\n        if (body !== null && isError(body)) return body;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '}'\");\r\n        } \r\n\r\n        this.tokens.advance();\r\n\r\n        return new ForNode(variableName, controls, body);\r\n    }\r\n\r\n\r\n    ifExpr() {\r\n        let cases = [];\r\n        let elseCase = null;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.LPAR) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '('\");\r\n        }\r\n\r\n        const mainCondition = this.expr();\r\n        if (isError(mainCondition)) return mainCondition;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.LBRACKET) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '{'\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        const mainExpr = this.statements(true);\r\n        if (isError(mainExpr)) return mainExpr;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '}'\");\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        cases.push({\r\n            condition: mainCondition,\r\n            expr: mainExpr \r\n        });\r\n\r\n        while (this.tokens.currentToken.matches(tokenTypes.KEYWORD, \"elif\")) {\r\n            this.tokens.advance();\r\n\r\n            if (this.tokens.currentToken.type !== tokenTypes.LPAR) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '('\");\r\n            }\r\n    \r\n            const condition = this.expr();\r\n            if (isError(condition)) return condition;\r\n    \r\n            if (this.tokens.currentToken.type !== tokenTypes.LBRACKET) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '{'\");\r\n            }\r\n    \r\n            this.tokens.advance();\r\n    \r\n            const expr = this.statements(true);\r\n            if (isError(expr)) return expr;\r\n    \r\n            if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '}'\");\r\n            }\r\n    \r\n            this.tokens.advance();\r\n    \r\n            cases.push({\r\n                condition: condition,\r\n                expr: expr\r\n            });\r\n        }\r\n\r\n        if (this.tokens.currentToken.matches(tokenTypes.KEYWORD, \"else\")) {\r\n            this.tokens.advance();\r\n\r\n            if (this.tokens.currentToken.type !== tokenTypes.LBRACKET) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '{'\");\r\n            }\r\n\r\n            this.tokens.advance();\r\n\r\n            elseCase = this.statements(true);\r\n            if (isError(elseCase)) return elseCase;\r\n\r\n            if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected '}'\");\r\n            }\r\n\r\n            this.tokens.advance();\r\n        }\r\n\r\n        return new IfNode(cases, elseCase);\r\n    }\r\n\r\n    arrayExpr() {\r\n        let elements = [];\r\n        const startPosition = this.tokens.currentToken.position;\r\n\r\n        if (this.tokens.currentToken.type === tokenTypes.RSQUARE) {\r\n            this.tokens.advance();\r\n        }\r\n        else {\r\n            while (this.tokens.currentToken.type !== tokenTypes.RSQUARE && this.tokens.currentToken.type !== tokenTypes.EOF) {\r\n                const expr = this.expr();\r\n                if (isError(expr)) return expr;\r\n            \r\n                elements.push(expr);\r\n                \r\n                if (this.tokens.currentToken.type === tokenTypes.COMMA) {\r\n                    this.tokens.advance();\r\n                }\r\n                else if (this.tokens.currentToken.type !== tokenTypes.RSQUARE) {\r\n                    return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected ']' or ','\");\r\n                }\r\n            }\r\n\r\n            if (this.tokens.currentToken.type !== tokenTypes.RSQUARE) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected ']'\");\r\n            }\r\n\r\n            this.tokens.advance();\r\n        }\r\n\r\n        const arrayNode = new ArrayNode(elements, dataTypes.Array, startPosition);\r\n        const indexedValue = this.getIndexedValue(false, arrayNode);\r\n\r\n        return indexedValue === null ? arrayNode : indexedValue;\r\n    }\r\n\r\n    enumExpr() {\r\n        let values = [];\r\n        const startPosition = this.tokens.currentToken.position;\r\n\r\n        while (this.tokens.currentToken.type !== tokenTypes.RBRACKET) {\r\n            if (this.tokens.currentToken.type !== tokenTypes.IDENTIFIER) {\r\n                if (Object.values(dataTypes).includes(this.tokens.currentToken.type)) {\r\n                    return new Error(this.tokens.currentToken.position, Error.TypeError, `Expected type identifier, not type: ${this.tokens.currentToken.type}`);\r\n                }\r\n\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, `Expected '}' or ','`);\r\n            }\r\n\r\n            values.push(this.tokens.currentToken.value);\r\n\r\n            this.tokens.advance();\r\n\r\n            if (this.tokens.currentToken.type === tokenTypes.COMMA) {\r\n                this.tokens.advance();\r\n            }\r\n        }\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, `Expected '}'`);\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        return new EnumNode(values, dataTypes.Enum, startPosition);\r\n    }\r\n\r\n    structExpr(variableName) {\r\n        const position = this.tokens.currentToken.position;\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.LBRACKET) {\r\n            return new Error(position, Error.InvalidSyntaxError, `Expected '{'`);\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        let structure = [];\r\n\r\n        while (this.tokens.currentToken.type !== tokenTypes.RBRACKET) {\r\n            let writable = false;\r\n\r\n            if (this.tokens.currentToken.type === tokenTypes.NOT) {\r\n                writable = true;\r\n                this.tokens.advance();\r\n            }\r\n\r\n            const identifier = this.tokens.currentToken;\r\n\r\n            if (identifier.type !== tokenTypes.IDENTIFIER) {\r\n                return new Error(identifier.position, Error.TypeError, `Expected identifier`);\r\n            }\r\n\r\n            this.tokens.advance();\r\n\r\n            if (this.tokens.currentToken.type !== tokenTypes.COLON) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, `Expected colon`);\r\n            }\r\n\r\n            this.tokens.advance();\r\n\r\n            let dataType = this.tokens.currentToken;\r\n\r\n            if (dataType.type !== tokenTypes.TYPE && dataType.type !== tokenTypes.IDENTIFIER && !dataType.matches(tokenTypes.KEYWORD, \"fn\")) {\r\n                return new Error(dataType.position, Error.TypeError, `Expected data type, function, or struct`);\r\n            }\r\n            if (dataType.type === tokenTypes.IDENTIFIER) dataType = new VariableAccessNode(dataType);\r\n\r\n            structure.push({ identifier, dataType, writable });\r\n\r\n            this.tokens.advance();\r\n\r\n            if (this.tokens.currentToken.type === tokenTypes.COMMA) {\r\n                this.tokens.advance();\r\n            }\r\n            else if (this.tokens.currentToken.type !== tokenTypes.RBRACKET) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, `Expected '}' or ','`);\r\n            }\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        return new BaseStructNode(variableName, structure, position);\r\n    }\r\n\r\n    initStructExpr() {\r\n        let name = this.tokens.currentToken;\r\n        const position = name.position;\r\n\r\n        if (name.type !== tokenTypes.IDENTIFIER) {\r\n            return new Error(name.position, Error.InvalidSyntaxError, `Expected identifier`);\r\n        }\r\n\r\n        name = new VariableAccessNode(name);\r\n\r\n        this.tokens.advance();\r\n        const args = this.getArgs();\r\n        this.tokens.advance();\r\n\r\n        return new StructNode(name, args, position);\r\n    }\r\n\r\n    //Helper Functions\r\n\r\n    getIndexedValue(indexesOnly, array) {\r\n        let indexes = [];\r\n        let value = null;\r\n\r\n        while (this.tokens.currentToken.type === tokenTypes.LSQUARE) {\r\n            this.tokens.advance();\r\n\r\n            const index = this.expr();\r\n            if (isError(index)) return index;\r\n\r\n            indexes.push(index);\r\n\r\n            if (this.tokens.currentToken.type !== tokenTypes.RSQUARE) {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, `Expected ']'`);\r\n            }\r\n\r\n            this.tokens.advance();\r\n        }\r\n\r\n        if (!indexesOnly) {\r\n            for (let i = 0; i < indexes.length; i++) {\r\n                if (value === null) {\r\n                    value = array.elements[indexes[i]];\r\n                }\r\n                else {\r\n                    value = value.elements[indexes[i]];\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    return new Error(this.tokens.currentToken.position, Error.IndexOutOfBoundsError, `Index out of bounds: ${indexes[i]}`);\r\n                }\r\n            }\r\n        }\r\n\r\n        return indexesOnly ? indexes : value;\r\n    } \r\n\r\n    getArgs() {\r\n        let args = [];\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.LPAR) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, `Expected '('`);\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        while (this.tokens.currentToken.type !== tokenTypes.RPAR && this.tokens.currentToken.type !== tokenTypes.EOF) {\r\n            const value = this.expr();\r\n            if (isError(value)) return value;\r\n\r\n            args.push(value);\r\n\r\n            if (this.tokens.currentToken.type === tokenTypes.COMMA) {\r\n                this.tokens.advance();\r\n            }\r\n        }\r\n\r\n        return args;\r\n    }\r\n\r\n    getFunctionArgs() {\r\n        let args = [];\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.LPAR) {\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, `Expected '('`);\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        while (this.tokens.currentToken.type !== tokenTypes.RPAR && this.tokens.currentToken.type !== tokenTypes.EOF) {\r\n            const arg = this.tokens.currentToken;\r\n\r\n            if (arg.type !== tokenTypes.IDENTIFIER) {\r\n                return new Error(arg.position, Error.InvalidSyntaxError, `Expected identifer. Received: ${arg.type}`);\r\n            }\r\n\r\n            this.tokens.advance();\r\n\r\n            if (this.tokens.currentToken.type === tokenTypes.COLON) {\r\n                this.tokens.advance();\r\n\r\n                const type = this.tokens.currentToken;\r\n\r\n                if (type.type !== tokenTypes.TYPE) {\r\n                    return new Error(type.position, Error.InvalidSyntaxError, `Expected data type. Recieved: ${type.type}`);\r\n                }\r\n\r\n                args.push({\r\n                    type: type,\r\n                    name: arg\r\n                });\r\n\r\n                this.tokens.advance();\r\n            }\r\n            else if ([tokenTypes.COMMA, tokenTypes.RPAR].includes(this.tokens.currentToken.type)) {\r\n                args.push({\r\n                    type: dataTypes.Any,\r\n                    name: arg\r\n                });\r\n            }\r\n            else {\r\n                return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, `Expected ':' or ','`);\r\n            }\r\n\r\n            if (this.tokens.currentToken.type === tokenTypes.COMMA) {\r\n                this.tokens.advance();\r\n            }\r\n        }\r\n\r\n        return args;\r\n    }\r\n\r\n    checkInitStruct() {\r\n        this.tokens.anchor();\r\n\r\n        const structType = this.tokens.currentToken;\r\n\r\n        this.tokens.advance();\r\n\r\n        const name = this.tokens.currentToken;\r\n\r\n        if (name.type !== tokenTypes.IDENTIFIER) {\r\n            this.tokens.anchor();\r\n            return null;\r\n        }\r\n\r\n        this.tokens.advance();\r\n\r\n        if (this.tokens.currentToken.type !== tokenTypes.ASSIGN) {\r\n            this.tokens.anchor();\r\n            return new Error(this.tokens.currentToken.position, Error.InvalidSyntaxError, \"Expected assignment after identifier declaration\");\r\n        }\r\n\r\n        this.tokens.anchor(true);\r\n        this.tokens.advance();\r\n\r\n        const value = this.expr();\r\n        if (isError(value)) return value;\r\n\r\n        return new VariableAssignNode(name, value, structType);\r\n    }\r\n}","class Position {\r\n    constructor(index, line, char) {\r\n        this.index = index;\r\n        this.line = line;\r\n        this.char = char;\r\n    }\r\n\r\n    toString() {\r\n        return `Token ${this.index + 1} [${this.line + 1}:${this.char}]`;\r\n    }\r\n}\r\n\r\nclass Token {\r\n    constructor(type, value, position) {\r\n        this.type = type;\r\n        this.value = value;\r\n        this.position = position;\r\n    }\r\n\r\n    matches(type, value) {\r\n        return (this.type === type && this.value === value);\r\n    }\r\n\r\n    toString() {\r\n        return `<Token ${this.type}: ${this.value === \"\\n\" ? \"\\\\n\" : this.value}>`;\r\n    }\r\n}\r\n\r\nclass TokenStream {\r\n    constructor(tokens) {\r\n        this.tokens = tokens;\r\n        this.index = -1;\r\n        this.currentToken = this.noToken();\r\n\r\n        this.anchorData = {\r\n            anchored: false\r\n        };\r\n\r\n        this.advance();\r\n    }\r\n\r\n    advance() {\r\n        this.index++;\r\n        this.currentToken = this.tokens[this.index] || this.noToken();\r\n\r\n        while (this.currentToken.type !== null && this.currentToken.type === \"NEWLINE\") this.advance();\r\n    }\r\n\r\n    anchor(keepPosition = false) {\r\n        if (!this.anchorData.anchored) {\r\n            this.anchorData.index = this.index;\r\n            this.anchorData.currentToken = this.currentToken;\r\n        }\r\n        else if (!keepPosition) {\r\n            this.index = this.anchorData.index;\r\n            this.currentToken = this.anchorData.currentToken;\r\n        }\r\n\r\n        this.anchorData.anchored = !this.anchorData.anchored;\r\n    }\r\n\r\n    noToken() {\r\n        return new Token(\"NO_TOKEN\", \"INTERNAL_ERROR\", new Position(-1, -1, 0));\r\n    }\r\n}\r\n\r\n//This is for calling functions within Javascript such as console.log, fileSystem, etc.\r\nclass APICaller {\r\n    constructor() {\r\n        this.calls = [];\r\n    }\r\n\r\n    call(value, type) {\r\n        this.calls.push({\r\n            value,\r\n            type\r\n        });\r\n    }\r\n\r\n    process() {\r\n        for (let i = 0; i < this.calls.length; i++) {\r\n            if (this[this.calls[i].type] === undefined) continue;\r\n            \r\n            this[this.calls[i].type](this.calls[i]);\r\n        }\r\n\r\n        this.calls.splice(0, this.calls.length);\r\n    }\r\n\r\n    print(call) {\r\n        console.log(`[Basp] ${call.value}`);\r\n    }\r\n\r\n    clear() {\r\n        console.clear();\r\n    }\r\n}\r\n\r\nclass Context {\r\n    constructor(displayName, symbolTable = null, parent = null, allowForceControls = false, allowReturn = false) {\r\n        this.displayName = displayName;\r\n        this.parent = parent;\r\n        this.allowForceControls = allowForceControls;\r\n        this.allowReturn = allowReturn;\r\n        this.symbolTable = symbolTable;\r\n\r\n        this.shouldContinue = false;\r\n        this.shouldBreak = false;\r\n        this.shouldReturn = false;\r\n\r\n        this.global = this._getGlobalContext();\r\n    }\r\n\r\n    isForceControllable(context = this) {\r\n        if (context.allowForceControls) return context;\r\n        else if (context.parent !== null) return this.isForceControllable.bind(this)(context.parent);\r\n\r\n        return null;\r\n    }\r\n\r\n    isReturnable(context = this) {\r\n        if (context.allowReturn) return context;\r\n        else if (context.parent !== null) return this.isReturnable.bind(this)(context.parent);\r\n\r\n        return null;\r\n    }\r\n\r\n    _getGlobalContext(context = this) {\r\n        if (!context.parent) return context;\r\n        else return this._getGlobalContext.bind(this)(context.parent);\r\n    }\r\n\r\n    clone() {\r\n        return new Context(this.displayName, this.symbolTable, this.parent, this.allowForceControls, this.allowReturn);\r\n    }\r\n}\r\n\r\nclass SymbolTable {\r\n    constructor(parent = null) {\r\n        this.symbols = {};\r\n        this.parent = parent;\r\n    }\r\n\r\n    get(name) {\r\n        const value = this.symbols.hasOwnProperty(name) ? this.symbols[name] : undefined;\r\n\r\n        if (value === undefined && this.parent !== null) {\r\n            return this.parent.get(name);\r\n        }\r\n\r\n        return value;\r\n    }\r\n\r\n    set(name, value) {\r\n        if (this.symbols.hasOwnProperty(name)) return false;\r\n\r\n        this.symbols[name] = value;\r\n        return true;\r\n    }\r\n\r\n    update(name, value) {\r\n        if (this.symbols[name] === undefined && this.parent !== null) {\r\n            const depth = this.parent._find(name);\r\n            \r\n            if (depth !== undefined) {\r\n                let currentParent = this.parent;\r\n\r\n                for (let i = 0; i < depth; i++) {\r\n                    currentParent = currentParent.parent;\r\n                }\r\n\r\n                currentParent.symbols[name] = value;\r\n            }\r\n        }\r\n\r\n        this.symbols[name] = value;\r\n    }\r\n\r\n    clear() {\r\n        this.symbols = {};\r\n    }\r\n\r\n    /**\r\n     * @protected\r\n     */\r\n\r\n    _find(name, depth = 0) {\r\n        const value = this.symbols[name];\r\n\r\n        if (value === undefined && this.parent !== null) {\r\n            depth++;\r\n            return this.parent._find(name, depth);\r\n        }\r\n\r\n        return depth;\r\n    }\r\n}\r\n\r\nfunction isError(check) {\r\n    return !!(check === undefined || check === null || check.error !== undefined);\r\n}\r\n\r\nfunction getString(line, start) {\r\n    let result = {\r\n        error: null,\r\n        value: null\r\n    };\r\n\r\n    const end = line.indexOf(`\"`, start + 1);\r\n\r\n    result.value = line.slice(start, end + 1);\r\n\r\n    return result;\r\n}\r\n\r\nfunction toBoolean(value) {\r\n    if (value === \"True\") return true;\r\n    else if (value === \"False\") return false;\r\n\r\n    return value;\r\n}\r\n\r\nmodule.exports = {\r\n    Token,\r\n    TokenStream,\r\n    Position,\r\n    Context,\r\n    SymbolTable,\r\n    APICaller,\r\n    isError,\r\n    getString,\r\n    toBoolean\r\n};","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{attrs:{\"id\":\"app\"}},[_c('Header'),_c('Hero'),_c('Editor')],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _vm._m(0)\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"header\"},[_c('h1',{staticClass:\"header__title\"},[_vm._v(\"Basp (Alpha)\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"header\">\r\n        <h1 class=\"header__title\">Basp (Alpha)</h1>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.header {\r\n    width: 100%;\r\n    height: 4rem;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &__title {\r\n        font-size: 1.8rem;\r\n    }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Header.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Header.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Header.vue?vue&type=template&id=294532e8&\"\nimport script from \"./Header.vue?vue&type=script&lang=js&\"\nexport * from \"./Header.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Header.vue?vue&type=style&index=0&id=294532e8&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"hero\"})\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"hero\">\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Hero.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Hero.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Hero.vue?vue&type=template&id=13e04af0&\"\nimport script from \"./Hero.vue?vue&type=script&lang=js&\"\nexport * from \"./Hero.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"editor\"},[_c('div',{staticClass:\"editor__code\"},[_c('div',{staticClass:\"editor__toolkit\"},[_c('button',{staticClass:\"editor__toolkit__btn\",on:{\"click\":_vm.start}},[_vm._v(\"Run\")]),_c('button',{staticClass:\"editor__toolkit__btn\",on:{\"click\":_vm.save}},[_vm._v(\"Save\")])]),_c('div',{staticClass:\"editor__code__input\",attrs:{\"name\":\"code\",\"id\":\"code\"}})]),_c('div',{staticClass:\"editor__divider\"}),_c('div',{staticClass:\"editor__output\"},[_c('div',{staticClass:\"editor__toolkit\"},[_c('button',{staticClass:\"editor__toolkit__btn\",on:{\"click\":_vm.clearOutput}},[_vm._v(\"Clear Output\")])]),_c('div',{staticClass:\"editor__output__log\",attrs:{\"id\":\"output\"}},_vm._l((_vm.output),function(msg){return _c('pre',{key:msg.id,class:msg.text === ' ' ? 'editor__output__log__space' : 'editor__output__log__msg'},[_vm._v(_vm._s(msg.text))])}),0)])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"editor\">\r\n        <div class=\"editor__code\">\r\n            <div class=\"editor__toolkit\">\r\n                <button class=\"editor__toolkit__btn\" v-on:click=\"start\">Run</button>\r\n                <button class=\"editor__toolkit__btn\" v-on:click=\"save\">Save</button>\r\n            </div>\r\n            <div name=\"code\" id=\"code\" class=\"editor__code__input\"></div>\r\n        </div>\r\n\r\n        <div class=\"editor__divider\">\r\n\r\n        </div>\r\n\r\n        <div class=\"editor__output\">\r\n            <div class=\"editor__toolkit\">\r\n                <button class=\"editor__toolkit__btn\" v-on:click=\"clearOutput\">Clear Output</button>\r\n            </div>\r\n\r\n            <div class=\"editor__output__log\" id=\"output\">\r\n                <pre :class=\"msg.text === ' ' ? 'editor__output__log__space' : 'editor__output__log__msg'\" :key=\"msg.id\"\r\n                    v-for=\"msg in output\">{{ msg.text }}</pre>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n//import CodeFlask from \"codeflask\";\r\nimport { EditorView, basicSetup } from \"codemirror\";\r\nimport { keymap } from \"@codemirror/view\";\r\nimport { indentWithTab } from \"@codemirror/commands\";\r\n//import { getLanguage } from \"@/assets/syntaxHighlighting/lang.js\";\r\n\r\nexport default {\r\n    name: \"Editor\",\r\n    data() {\r\n        return {\r\n            editor: null,\r\n            output: []\r\n        }\r\n    },\r\n    methods: {\r\n        start() {\r\n            this.run();\r\n            this.scrollElement(document.querySelector(\".editor__output__log\"));\r\n        },\r\n\r\n        run() {\r\n            const lexer = require(`../../../src/lexer.js`);\r\n            const Parser = require(\"../../../src/parser/parser.js\");\r\n\r\n            const Interpreter = require(\"../../../src/interpreter/interpreter.js\");\r\n            const interpreterSetup = require(\"../../../src/interpreter/interpreterSetup.js\");\r\n\r\n            const { isError } = require(\"../../../src/utils.js\");\r\n\r\n            this.save();\r\n\r\n            const tokens = lexer(this.getCode());\r\n            if (tokens.tokens.length === 0) return this.log(null);\r\n            if (isError(tokens)) return this.generateLog(tokens.toString());\r\n\r\n            //this.generateLog(tokens)\r\n\r\n            const parser = new Parser(tokens);\r\n            const ast = parser.parse();\r\n\r\n            for (let i = 0; i < ast.nodes.length; i++) {\r\n                if (isError(ast.nodes[i])) {\r\n                    if (ast.nodes[i] !== undefined && ast.nodes[i].error !== undefined) {\r\n                        return this.generateLog(ast.nodes[i].toString());\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            //interpreter\r\n            const interpreter = new Interpreter();\r\n            const results = ast === false ? null : interpreter.visit(ast, interpreterSetup());\r\n\r\n            //console.log(ast)\r\n\r\n            //display output\r\n            this.checkErrors(results, isError);\r\n            this.log(null);\r\n        },\r\n\r\n        checkErrors(statements, isError) {\r\n            if (isError(statements)) {\r\n                this.generateLog(statements.toString());\r\n                return null;\r\n            }\r\n\r\n            if (statements.context !== null) this.processAPICaller(statements.context.global.apiCaller);\r\n\r\n            if (statements.value !== undefined) return;\r\n\r\n            for (let i = 0; i < statements.nodes.length; i++) {\r\n                if (statements.value === undefined) {\r\n                    if (this.checkErrors(statements.nodes[i], isError) === null) return null;\r\n                }\r\n            }\r\n        },\r\n\r\n        processAPICaller(apiCaller) {\r\n            const operations = {\r\n                print: (call) => this.log(call.value),\r\n                clear: () => this.clearOutput()\r\n            };\r\n\r\n            for (let i = 0; i < apiCaller.calls.length; i++) {\r\n                if (operations[apiCaller.calls[i].type] === undefined) continue;\r\n                operations[apiCaller.calls[i].type](apiCaller.calls[i]);\r\n            }\r\n\r\n            apiCaller.calls.splice(0, apiCaller.calls.length);\r\n        },\r\n\r\n        log(text) {\r\n            if (text === null) {\r\n                this.generateLog(\"[Basp] Program Has Executed...\");\r\n                this.generateLog(\" \");\r\n                return;\r\n            }\r\n            this.generateLog(`[Basp] ${text}`);\r\n        },\r\n\r\n        generateLog(textToDisplay) {\r\n            this.output.push({\r\n                text: textToDisplay,\r\n                id: this.output.length\r\n            });\r\n        },\r\n\r\n        clearOutput() {\r\n            this.output = [];\r\n        },\r\n\r\n        save() {\r\n            localStorage.setItem(\"code\", this.getCode());\r\n        },\r\n\r\n        getCode() {\r\n            const children = this.editor.state.doc.children;\r\n\r\n            if (children !== null) {\r\n                let code = \"\";\r\n\r\n                for (let i = 0; i < children.length; i++) {\r\n                    code += children[i].text.join(\"\\n\");\r\n                }\r\n\r\n                return code;\r\n            }\r\n\r\n            return this.editor.state.doc.text.join(\"\\n\");\r\n        },\r\n\r\n        scrollElement(element) {\r\n            element.scroll({ top: element.scrollHeight, behavior: \"smooth\" });\r\n        }\r\n    },\r\n    mounted() {\r\n        this.editor = new EditorView({\r\n            doc: localStorage.getItem(\"code\") || \"\\n\".repeat(4),\r\n            extensions: [\r\n                basicSetup,\r\n                keymap.of([indentWithTab]),\r\n                //getLanguage()\r\n            ],\r\n            parent: document.querySelector(\"#code\"),\r\n            theme: \"monokai\",\r\n        });\r\n\r\n        // console.log(this.editor.state.doc)\r\n\r\n        // this.editor.addEventListener(\"change\", () => {\r\n        //     console.log(\"E\")\r\n        // })\r\n\r\n        // this.editor = new CodeFlask(document.querySelector(\".editor__code__input\"), {\r\n        //     lineNumbers: true,\r\n        //     language: \"basp\",\r\n        //     defaultTheme: false,\r\n        //     tabSize: 4\r\n        // });\r\n\r\n        // this.editor.updateCode(localStorage.getItem(\"code\") || \"\");\r\n\r\n        // this.editor.addLanguage(\"basp\", {\r\n        //     \"string\": /\"(.*?)\"/g,\r\n        //     \"variable\": /\\b(int|string|bool|array|enum|null)\\b/g,\r\n        //     \"keyword\": /\\b(if|else|elif|fn|return|continue|break|for|while|in)\\b/g,\r\n        //     \"number\": /\\b([+-]?[0-9]+(\\\\.?[0-9]+)?)\\b/g,\r\n        //     \"boolean\": /\\b(True|False)\\b/g,\r\n        //     \"parenthesis\": /[()]|[[]]|[{}]/g,\r\n        //     \"comment\": /\\b(comment)\\b/g\r\n        // });\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n$halfEditorWidth: 47%;\r\n\r\n.codeflask {\r\n    height: inherit !important;\r\n    width: $halfEditorWidth !important;\r\n    background-color: #3C3C3A;\r\n\r\n    &__flatten {\r\n        font-size: 1rem !important;\r\n        color: #ddca7e;\r\n    }\r\n\r\n    &__textarea {\r\n        background-color: #3C3C3A !important;\r\n        caret-color: gray !important;\r\n    }\r\n\r\n    &__lines {\r\n        background-color: #3C3C3A;\r\n    }\r\n}\r\n\r\n.token {\r\n    &.keyword {\r\n        color: #569cd6;\r\n    }\r\n\r\n    &.string {\r\n        color: #ce9178;\r\n    }\r\n\r\n    &.number {\r\n        color: #b5cea8;\r\n    }\r\n\r\n    &.boolean {\r\n        color: #4ec9b0;\r\n    }\r\n\r\n    &.variable {\r\n        color: #c586c0;\r\n    }\r\n\r\n    &.parenthesis {\r\n        color: rgb(160, 160, 160);\r\n    }\r\n\r\n    &.comment {\r\n        color: #6a9955;\r\n    }\r\n}\r\n\r\n.editor {\r\n    width: 100%;\r\n    height: 50rem;\r\n    background-color: red;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    &__divider {\r\n        width: 2rem;\r\n    }\r\n\r\n    &__toolkit {\r\n        width: 100%;\r\n        height: 3rem;\r\n\r\n        display: flex;\r\n        align-items: center;\r\n\r\n        border-bottom: 10px solid #eee;\r\n\r\n        &__btn {\r\n            margin-left: 0.5rem;\r\n            width: 4rem;\r\n            height: 2rem;\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    &__code {\r\n        background-color: white;\r\n        width: $halfEditorWidth;\r\n        height: 90%;\r\n\r\n        &__input {\r\n            background-color: white;\r\n            width: 100%;\r\n            height: calc(50rem * 0.9 - 4rem);\r\n            max-height: calc(50rem * 0.9 - 4rem);\r\n            overflow-y: scroll;\r\n        }\r\n    }\r\n\r\n    &__output {\r\n        width: $halfEditorWidth;\r\n        height: 90%;\r\n        background-color: white;\r\n\r\n        border-radius: 0px 10px 10px 0px;\r\n\r\n        &__log {\r\n            max-height: calc(50rem * 0.9 - 4rem);\r\n            overflow-y: scroll;\r\n\r\n            &__msg {\r\n                padding: 0rem 1rem 0rem 1rem;\r\n            }\r\n\r\n            &__space {\r\n                width: 100%;\r\n                height: 1rem;\r\n            }\r\n        }\r\n\r\n        &__toolkit {\r\n            width: 100%;\r\n            height: 3rem;\r\n\r\n            display: flex;\r\n            align-items: center;\r\n\r\n            &__run {\r\n                margin-left: 0.5rem;\r\n                width: 7rem;\r\n                height: 2rem;\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n}\r\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Editor.vue?vue&type=template&id=45032af0&\"\nimport script from \"./Editor.vue?vue&type=script&lang=js&\"\nexport * from \"./Editor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Editor.vue?vue&type=style&index=0&id=45032af0&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <div id=\"app\">\n        <Header />\n        <Hero />\n        <Editor />\n    </div>\n</template>\n\n<script>\nimport Header from '@/components/Header.vue';\nimport Hero from '@/components/Hero.vue';\nimport Editor from '@/components/Editor.vue';\n\nexport default {\n    name: \"Home\",\n    components: {\n        Header,\n        Hero,\n        Editor\n    }\n};\n</script>\n\n<style lang=\"scss\">\n@import url('https://fonts.googleapis.com/css2?family=Poppins&display=swap');\n\n* {\n    padding: 0;\n    margin: 0;\n}\n\nhtml,\nbody {\n    width: 100%;\n    height: 100%;\n\n    margin: 0;\n    padding: 0;\n\n    font-family: 'Poppins', sans-serif;\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=4a01122e&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=4a01122e&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from \"vue\";\nimport App from \"./App.vue\";\n\nVue.config.productionTip = true;\n\nnew Vue({\n  render: (h) => h(App),\n}).$mount(\"#app\");\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t143: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkbasp\"] = self[\"webpackChunkbasp\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [998], function() { return __webpack_require__(5224); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["dataTypes","require","push","INodes","IBuiltInFunctionNode","Null","type","Any","name","args","v","getArg","n","nClone","Object","assign","create","getPrototypeOf","elements","value","getValue","pop","module","exports","INumberNode","IStringNode","NumberType","Number","String","context","strNumber","stripQuotes","position","StringType","number","IStructNode","Floor","Math","floor","Ceil","ceil","Round","round","Abs","abs","Sqrt","sqrt","Random","random","getMath","methods","writable","properties","PI","concat","Struct","Print","valueToPrint","global","apiCaller","call","Clear","toUpperCase","toLowerCase","split","Array","d","IArrayNode","map","c","IBooleanNode","IsArray","Bool","arg","IsNumber","IsString","IsEnum","Enum","IsBoolean","IsFunction","Function","Typeof","tokenTypes","NEWLINE","COMMENT","NUMBER","STRING","BOOL","ADD_EQ","ADD","SUB_EQ","SUB","MUL_EQ","MUL","DIV_EQ","DIV","POW_EQ","POW","MOD_EQ","MOD","LSQUARE","RSQUARE","LBRACKET","RBRACKET","EQ","NEQ","NOT","AND","OR","GTE","LTE","GT","LT","LPAR","RPAR","DOT","COMMA","COLON","ASSIGN","TYPE","KEYWORD","IDENTIFIER","EOF","lexerRules","EnumValue","assignmentOperators","Error","constructor","error","details","this","toString","lineOne","lineTwo","undefined","result","getStack","walls","repeat","max","length","longestLine","stack","current","contextClone","clone","displayName","parent","INode","nodeType","super","add","other","sub","mul","div","RuntimeError","pow","mod","index","replace","getArrayValue","IEnumNode","getEnumValue","element","IEnumValueNode","wrap","IBaseStructNode","structure","getBaseStructValue","getStructValue","update","setValue","i","IFunctionNode","includes","parentClone","IBaseFunction","returnType","body","execute","wantedArg","filter","IMultiResultNode","nodes","IForceControlNode","nodeToControl","continueControl","breakControl","continue","break","IReturnNode","nodeToReturnValueTo","valueStr","toBoolean","ICompare","left","right","operation","compareFuncs","eq","neq","lt","lte","gt","gte","and","or","not","isError","Context","SymbolTable","Node","convertToDatatypes","functionReturnFormat","input","func","visit","node","toVisit","bind","StatementsNode","statements","statement","shouldReturn","shouldContinue","shouldBreak","NumberNode","token","StringNode","BooleanNode","BaseStructNode","structName","identifier","dataType","VariableAccessNode","processedType","StructNode","baseStruct","_processArgs","UnaryOpNode","factor","operationToken","BinOpNode","leftNode","operationFunc","_processDotExpression","rightNode","leftIdentifierValue","propertyName","_getPropertyName","property","symbolTable","ArrayNode","EnumNode","VariableAssignNode","set","get","_processIndexes","indexes","CallNode","nodeToCall","isBuiltInFunction","builtInFunctionArgs","TypeError","FunctionNode","ContinueNode","controllableNode","isForceControllable","InvalidSyntaxError","BreakNode","ReturnNode","isReturnable","nodeToReturn","IfNode","newContext","cases","condition","expr","elseCase","WhileNode","clear","ForNode","controls","start","end","step","isArray","interpretedControls","control","variable","isNaN","variableName","continueLooping","processRightNode","nodeToProcess","functionName","receivedArgs","expectedArgs","identifierValue","rightIdentifierValue","rightIdentifierIndexes","leftIdentifierIndexes","enumValue","keys","getResult","argValue","expectedType","console","log","IndexOutOfBoundsError","APICaller","rules","Token","TokenStream","Position","getString","lines","tokens","sanitizedLine","tokensInLine","unshift","currentIndexInLine","inString","tokenIndex","charPosition","indexOf","currentPosition","char","j","test","stringData","lastToken","eofPosition","parse","inBrackets","currentToken","advance","matches","variableType","isStruct","structExpr","checkInitStruct","binOp","compExpr","assignmentExpr","arithExpr","term","power","dot","call2","atom","getArgs","getIndexedValue","enumExpr","arrayExpr","functionExpr","ifExpr","forExpr","whileExpr","initStructExpr","operations","func2","getFunctionArgs","tokenType","isDatatypeOrIdentifier","values","mainCondition","mainExpr","startPosition","arrayNode","indexedValue","indexesOnly","array","anchor","structType","line","noToken","anchorData","anchored","keepPosition","calls","process","splice","print","allowForceControls","allowReturn","_getGlobalContext","symbols","hasOwnProperty","depth","_find","currentParent","check","slice","render","_vm","_c","_self","attrs","staticRenderFns","_m","staticClass","_v","component","on","save","clearOutput","_l","output","msg","key","id","class","text","_s","data","editor","run","checkErrors","processAPICaller","generateLog","localStorage","getCode","code","scrollElement","top","behavior","mounted","doc","extensions","basicSetup","keymap","theme","components","Header","Hero","Editor","Vue","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","r","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","e","window","obj","prop","prototype","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","__webpack_exports__"],"sourceRoot":""}